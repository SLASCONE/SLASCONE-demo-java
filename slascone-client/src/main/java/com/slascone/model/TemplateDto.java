/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.ActivationUponLicenseCreation;
import com.slascone.model.ClientType;
import com.slascone.model.ExpirationMode;
import com.slascone.model.HeartBeatMode;
import com.slascone.model.LicenseTypeDto;
import com.slascone.model.ProvisioningMode;
import com.slascone.model.SoftwareReleaseLimitationDto;
import com.slascone.model.TemplateConstrainedVariableDto;
import com.slascone.model.TemplateFeatureDto;
import com.slascone.model.TemplateLimitationDto;
import com.slascone.model.TemplateVariableDto;
import com.slascone.model.TokenUiMode;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * TemplateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class TemplateDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private UUID id;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nonnull
  private UUID productId;

  public static final String SERIALIZED_NAME_PRODUCT_NAME = "product_name";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  @javax.annotation.Nullable
  private String productName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  @javax.annotation.Nullable
  private String shortDescription;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  @javax.annotation.Nullable
  private Boolean isActive;

  public static final String SERIALIZED_NAME_TOKEN_LIMIT = "token_limit";
  @SerializedName(SERIALIZED_NAME_TOKEN_LIMIT)
  @javax.annotation.Nonnull
  private Integer tokenLimit;

  public static final String SERIALIZED_NAME_GOODWILL_TOKEN_LIMIT = "goodwill_token_limit";
  @SerializedName(SERIALIZED_NAME_GOODWILL_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer goodwillTokenLimit;

  public static final String SERIALIZED_NAME_FLOATING_TOKEN_LIMIT = "floating_token_limit";
  @SerializedName(SERIALIZED_NAME_FLOATING_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer floatingTokenLimit;

  public static final String SERIALIZED_NAME_ENFORCE_FLOATING_LIMIT = "enforce_floating_limit";
  @SerializedName(SERIALIZED_NAME_ENFORCE_FLOATING_LIMIT)
  @javax.annotation.Nullable
  private Boolean enforceFloatingLimit;

  public static final String SERIALIZED_NAME_USER_LIMIT = "user_limit";
  @SerializedName(SERIALIZED_NAME_USER_LIMIT)
  @javax.annotation.Nullable
  private Integer userLimit;

  public static final String SERIALIZED_NAME_LICENSE_TYPE_ID = "license_type_id";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE_ID)
  @javax.annotation.Nullable
  private UUID licenseTypeId;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "license_type";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  @javax.annotation.Nullable
  private LicenseTypeDto licenseType;

  public static final String SERIALIZED_NAME_IS_SOFTWARE_RELEASE_LIMITATION_ADJUSTABLE = "is_software_release_limitation_adjustable";
  @SerializedName(SERIALIZED_NAME_IS_SOFTWARE_RELEASE_LIMITATION_ADJUSTABLE)
  @javax.annotation.Nullable
  private Boolean isSoftwareReleaseLimitationAdjustable;

  public static final String SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION_ID = "software_release_limitation_id";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION_ID)
  @javax.annotation.Nullable
  private UUID softwareReleaseLimitationId;

  public static final String SERIALIZED_NAME_ALLOWS_INVALID_SOFTWARE_RELEASE = "allows_invalid_software_release";
  @SerializedName(SERIALIZED_NAME_ALLOWS_INVALID_SOFTWARE_RELEASE)
  @javax.annotation.Nullable
  private Boolean allowsInvalidSoftwareRelease;

  public static final String SERIALIZED_NAME_IS_EXPIRATION_MODE_ADJUSTABLE = "is_expiration_mode_adjustable";
  @SerializedName(SERIALIZED_NAME_IS_EXPIRATION_MODE_ADJUSTABLE)
  @javax.annotation.Nullable
  private Boolean isExpirationModeAdjustable;

  public static final String SERIALIZED_NAME_EXPIRATION_MODE = "expiration_mode";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_MODE)
  @javax.annotation.Nullable
  private ExpirationMode expirationMode;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE_UTC = "expiration_date_utc";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime expirationDateUtc;

  public static final String SERIALIZED_NAME_VALID_DAYS_COUNT = "valid_days_count";
  @SerializedName(SERIALIZED_NAME_VALID_DAYS_COUNT)
  @javax.annotation.Nullable
  private Integer validDaysCount;

  public static final String SERIALIZED_NAME_TRIAL_DAYS_COUNT = "trial_days_count";
  @SerializedName(SERIALIZED_NAME_TRIAL_DAYS_COUNT)
  @javax.annotation.Nullable
  private Integer trialDaysCount;

  public static final String SERIALIZED_NAME_HEARTBEAT_MODE = "heartbeat_mode";
  @SerializedName(SERIALIZED_NAME_HEARTBEAT_MODE)
  @javax.annotation.Nullable
  private HeartBeatMode heartbeatMode;

  public static final String SERIALIZED_NAME_HEARTBEAT_PERIOD = "heartbeat_period";
  @SerializedName(SERIALIZED_NAME_HEARTBEAT_PERIOD)
  @javax.annotation.Nullable
  private Integer heartbeatPeriod;

  public static final String SERIALIZED_NAME_FREE_RIDE = "free_ride";
  @SerializedName(SERIALIZED_NAME_FREE_RIDE)
  @javax.annotation.Nullable
  private Integer freeRide;

  public static final String SERIALIZED_NAME_CLIENT_TYPE = "client_type";
  @SerializedName(SERIALIZED_NAME_CLIENT_TYPE)
  @javax.annotation.Nullable
  private ClientType clientType;

  public static final String SERIALIZED_NAME_ACTIVATION_UPON_LICENSE_CREATION = "activation_upon_license_creation";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_UPON_LICENSE_CREATION)
  @javax.annotation.Nullable
  private ActivationUponLicenseCreation activationUponLicenseCreation;

  public static final String SERIALIZED_NAME_TOKEN_UI_MODE = "token_ui_mode";
  @SerializedName(SERIALIZED_NAME_TOKEN_UI_MODE)
  @javax.annotation.Nullable
  private TokenUiMode tokenUiMode;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  @javax.annotation.Nullable
  private List<TemplateFeatureDto> features;

  public static final String SERIALIZED_NAME_LIMITATIONS = "limitations";
  @SerializedName(SERIALIZED_NAME_LIMITATIONS)
  @javax.annotation.Nullable
  private List<TemplateLimitationDto> limitations;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  @javax.annotation.Nullable
  private List<TemplateVariableDto> variables;

  public static final String SERIALIZED_NAME_CONSTRAINED_VARIABLES = "constrained_variables";
  @SerializedName(SERIALIZED_NAME_CONSTRAINED_VARIABLES)
  @javax.annotation.Nullable
  private List<TemplateConstrainedVariableDto> constrainedVariables;

  public static final String SERIALIZED_NAME_PROVISIONING_MODE = "provisioning_mode";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_MODE)
  @javax.annotation.Nullable
  private ProvisioningMode provisioningMode;

  public static final String SERIALIZED_NAME_SESSION_PERIOD = "session_period";
  @SerializedName(SERIALIZED_NAME_SESSION_PERIOD)
  @javax.annotation.Nullable
  private Integer sessionPeriod;

  public static final String SERIALIZED_NAME_MAX_FLOATING_SESSIONS_WITH_SAME_CLIENT_ID = "max_floating_sessions_with_same_client_id";
  @SerializedName(SERIALIZED_NAME_MAX_FLOATING_SESSIONS_WITH_SAME_CLIENT_ID)
  @javax.annotation.Nullable
  private Integer maxFloatingSessionsWithSameClientId;

  public static final String SERIALIZED_NAME_IS_TEMPORARY = "is_temporary";
  @SerializedName(SERIALIZED_NAME_IS_TEMPORARY)
  @javax.annotation.Nullable
  private Boolean isTemporary;

  public static final String SERIALIZED_NAME_HAS_STRICT_HEARTBEATS = "has_strict_heartbeats";
  @SerializedName(SERIALIZED_NAME_HAS_STRICT_HEARTBEATS)
  @javax.annotation.Nullable
  private Boolean hasStrictHeartbeats;

  public static final String SERIALIZED_NAME_CREATED_DATE_UTC = "created_date_utc";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime createdDateUtc;

  public static final String SERIALIZED_NAME_MODIFIED_DATE_UTC = "modified_date_utc";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDateUtc;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  @javax.annotation.Nullable
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION = "software_release_limitation";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION)
  @javax.annotation.Nullable
  private SoftwareReleaseLimitationDto softwareReleaseLimitation;

  public static final String SERIALIZED_NAME_SUPPORTS_LICENSE_USER_GROUPS = "supports_license_user_groups";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_LICENSE_USER_GROUPS)
  @javax.annotation.Nullable
  private Boolean supportsLicenseUserGroups;

  public static final String SERIALIZED_NAME_HEARTBEAT_SAMPLING_RATE = "heartbeat_sampling_rate";
  @SerializedName(SERIALIZED_NAME_HEARTBEAT_SAMPLING_RATE)
  @javax.annotation.Nullable
  private Integer heartbeatSamplingRate;

  public TemplateDto() {
  }

  public TemplateDto id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public TemplateDto productId(@javax.annotation.Nonnull UUID productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nonnull
  public UUID getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nonnull UUID productId) {
    this.productId = productId;
  }


  public TemplateDto productName(@javax.annotation.Nullable String productName) {
    this.productName = productName;
    return this;
  }

  /**
   * Get productName
   * @return productName
   */
  @javax.annotation.Nullable
  public String getProductName() {
    return productName;
  }

  public void setProductName(@javax.annotation.Nullable String productName) {
    this.productName = productName;
  }


  public TemplateDto name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public TemplateDto description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public TemplateDto shortDescription(@javax.annotation.Nullable String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Get shortDescription
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(@javax.annotation.Nullable String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public TemplateDto isActive(@javax.annotation.Nullable Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(@javax.annotation.Nullable Boolean isActive) {
    this.isActive = isActive;
  }


  public TemplateDto tokenLimit(@javax.annotation.Nonnull Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
    return this;
  }

  /**
   * Get tokenLimit
   * @return tokenLimit
   */
  @javax.annotation.Nonnull
  public Integer getTokenLimit() {
    return tokenLimit;
  }

  public void setTokenLimit(@javax.annotation.Nonnull Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
  }


  public TemplateDto goodwillTokenLimit(@javax.annotation.Nullable Integer goodwillTokenLimit) {
    this.goodwillTokenLimit = goodwillTokenLimit;
    return this;
  }

  /**
   * Get goodwillTokenLimit
   * @return goodwillTokenLimit
   */
  @javax.annotation.Nullable
  public Integer getGoodwillTokenLimit() {
    return goodwillTokenLimit;
  }

  public void setGoodwillTokenLimit(@javax.annotation.Nullable Integer goodwillTokenLimit) {
    this.goodwillTokenLimit = goodwillTokenLimit;
  }


  public TemplateDto floatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
    return this;
  }

  /**
   * Get floatingTokenLimit
   * @return floatingTokenLimit
   */
  @javax.annotation.Nullable
  public Integer getFloatingTokenLimit() {
    return floatingTokenLimit;
  }

  public void setFloatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
  }


  public TemplateDto enforceFloatingLimit(@javax.annotation.Nullable Boolean enforceFloatingLimit) {
    this.enforceFloatingLimit = enforceFloatingLimit;
    return this;
  }

  /**
   * Get enforceFloatingLimit
   * @return enforceFloatingLimit
   */
  @javax.annotation.Nullable
  public Boolean getEnforceFloatingLimit() {
    return enforceFloatingLimit;
  }

  public void setEnforceFloatingLimit(@javax.annotation.Nullable Boolean enforceFloatingLimit) {
    this.enforceFloatingLimit = enforceFloatingLimit;
  }


  public TemplateDto userLimit(@javax.annotation.Nullable Integer userLimit) {
    this.userLimit = userLimit;
    return this;
  }

  /**
   * Get userLimit
   * @return userLimit
   */
  @javax.annotation.Nullable
  public Integer getUserLimit() {
    return userLimit;
  }

  public void setUserLimit(@javax.annotation.Nullable Integer userLimit) {
    this.userLimit = userLimit;
  }


  public TemplateDto licenseTypeId(@javax.annotation.Nullable UUID licenseTypeId) {
    this.licenseTypeId = licenseTypeId;
    return this;
  }

  /**
   * Get licenseTypeId
   * @return licenseTypeId
   */
  @javax.annotation.Nullable
  public UUID getLicenseTypeId() {
    return licenseTypeId;
  }

  public void setLicenseTypeId(@javax.annotation.Nullable UUID licenseTypeId) {
    this.licenseTypeId = licenseTypeId;
  }


  public TemplateDto licenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Get licenseType
   * @return licenseType
   */
  @javax.annotation.Nullable
  public LicenseTypeDto getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
  }


  public TemplateDto isSoftwareReleaseLimitationAdjustable(@javax.annotation.Nullable Boolean isSoftwareReleaseLimitationAdjustable) {
    this.isSoftwareReleaseLimitationAdjustable = isSoftwareReleaseLimitationAdjustable;
    return this;
  }

  /**
   * Get isSoftwareReleaseLimitationAdjustable
   * @return isSoftwareReleaseLimitationAdjustable
   */
  @javax.annotation.Nullable
  public Boolean getIsSoftwareReleaseLimitationAdjustable() {
    return isSoftwareReleaseLimitationAdjustable;
  }

  public void setIsSoftwareReleaseLimitationAdjustable(@javax.annotation.Nullable Boolean isSoftwareReleaseLimitationAdjustable) {
    this.isSoftwareReleaseLimitationAdjustable = isSoftwareReleaseLimitationAdjustable;
  }


  public TemplateDto softwareReleaseLimitationId(@javax.annotation.Nullable UUID softwareReleaseLimitationId) {
    this.softwareReleaseLimitationId = softwareReleaseLimitationId;
    return this;
  }

  /**
   * Get softwareReleaseLimitationId
   * @return softwareReleaseLimitationId
   */
  @javax.annotation.Nullable
  public UUID getSoftwareReleaseLimitationId() {
    return softwareReleaseLimitationId;
  }

  public void setSoftwareReleaseLimitationId(@javax.annotation.Nullable UUID softwareReleaseLimitationId) {
    this.softwareReleaseLimitationId = softwareReleaseLimitationId;
  }


  public TemplateDto allowsInvalidSoftwareRelease(@javax.annotation.Nullable Boolean allowsInvalidSoftwareRelease) {
    this.allowsInvalidSoftwareRelease = allowsInvalidSoftwareRelease;
    return this;
  }

  /**
   * Get allowsInvalidSoftwareRelease
   * @return allowsInvalidSoftwareRelease
   */
  @javax.annotation.Nullable
  public Boolean getAllowsInvalidSoftwareRelease() {
    return allowsInvalidSoftwareRelease;
  }

  public void setAllowsInvalidSoftwareRelease(@javax.annotation.Nullable Boolean allowsInvalidSoftwareRelease) {
    this.allowsInvalidSoftwareRelease = allowsInvalidSoftwareRelease;
  }


  public TemplateDto isExpirationModeAdjustable(@javax.annotation.Nullable Boolean isExpirationModeAdjustable) {
    this.isExpirationModeAdjustable = isExpirationModeAdjustable;
    return this;
  }

  /**
   * Get isExpirationModeAdjustable
   * @return isExpirationModeAdjustable
   */
  @javax.annotation.Nullable
  public Boolean getIsExpirationModeAdjustable() {
    return isExpirationModeAdjustable;
  }

  public void setIsExpirationModeAdjustable(@javax.annotation.Nullable Boolean isExpirationModeAdjustable) {
    this.isExpirationModeAdjustable = isExpirationModeAdjustable;
  }


  public TemplateDto expirationMode(@javax.annotation.Nullable ExpirationMode expirationMode) {
    this.expirationMode = expirationMode;
    return this;
  }

  /**
   * Get expirationMode
   * @return expirationMode
   */
  @javax.annotation.Nullable
  public ExpirationMode getExpirationMode() {
    return expirationMode;
  }

  public void setExpirationMode(@javax.annotation.Nullable ExpirationMode expirationMode) {
    this.expirationMode = expirationMode;
  }


  public TemplateDto expirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
    return this;
  }

  /**
   * Get expirationDateUtc
   * @return expirationDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDateUtc() {
    return expirationDateUtc;
  }

  public void setExpirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
  }


  public TemplateDto validDaysCount(@javax.annotation.Nullable Integer validDaysCount) {
    this.validDaysCount = validDaysCount;
    return this;
  }

  /**
   * Get validDaysCount
   * @return validDaysCount
   */
  @javax.annotation.Nullable
  public Integer getValidDaysCount() {
    return validDaysCount;
  }

  public void setValidDaysCount(@javax.annotation.Nullable Integer validDaysCount) {
    this.validDaysCount = validDaysCount;
  }


  public TemplateDto trialDaysCount(@javax.annotation.Nullable Integer trialDaysCount) {
    this.trialDaysCount = trialDaysCount;
    return this;
  }

  /**
   * Get trialDaysCount
   * @return trialDaysCount
   */
  @javax.annotation.Nullable
  public Integer getTrialDaysCount() {
    return trialDaysCount;
  }

  public void setTrialDaysCount(@javax.annotation.Nullable Integer trialDaysCount) {
    this.trialDaysCount = trialDaysCount;
  }


  public TemplateDto heartbeatMode(@javax.annotation.Nullable HeartBeatMode heartbeatMode) {
    this.heartbeatMode = heartbeatMode;
    return this;
  }

  /**
   * Get heartbeatMode
   * @return heartbeatMode
   */
  @javax.annotation.Nullable
  public HeartBeatMode getHeartbeatMode() {
    return heartbeatMode;
  }

  public void setHeartbeatMode(@javax.annotation.Nullable HeartBeatMode heartbeatMode) {
    this.heartbeatMode = heartbeatMode;
  }


  public TemplateDto heartbeatPeriod(@javax.annotation.Nullable Integer heartbeatPeriod) {
    this.heartbeatPeriod = heartbeatPeriod;
    return this;
  }

  /**
   * Get heartbeatPeriod
   * @return heartbeatPeriod
   */
  @javax.annotation.Nullable
  public Integer getHeartbeatPeriod() {
    return heartbeatPeriod;
  }

  public void setHeartbeatPeriod(@javax.annotation.Nullable Integer heartbeatPeriod) {
    this.heartbeatPeriod = heartbeatPeriod;
  }


  public TemplateDto freeRide(@javax.annotation.Nullable Integer freeRide) {
    this.freeRide = freeRide;
    return this;
  }

  /**
   * Get freeRide
   * @return freeRide
   */
  @javax.annotation.Nullable
  public Integer getFreeRide() {
    return freeRide;
  }

  public void setFreeRide(@javax.annotation.Nullable Integer freeRide) {
    this.freeRide = freeRide;
  }


  public TemplateDto clientType(@javax.annotation.Nullable ClientType clientType) {
    this.clientType = clientType;
    return this;
  }

  /**
   * Get clientType
   * @return clientType
   */
  @javax.annotation.Nullable
  public ClientType getClientType() {
    return clientType;
  }

  public void setClientType(@javax.annotation.Nullable ClientType clientType) {
    this.clientType = clientType;
  }


  public TemplateDto activationUponLicenseCreation(@javax.annotation.Nullable ActivationUponLicenseCreation activationUponLicenseCreation) {
    this.activationUponLicenseCreation = activationUponLicenseCreation;
    return this;
  }

  /**
   * Get activationUponLicenseCreation
   * @return activationUponLicenseCreation
   */
  @javax.annotation.Nullable
  public ActivationUponLicenseCreation getActivationUponLicenseCreation() {
    return activationUponLicenseCreation;
  }

  public void setActivationUponLicenseCreation(@javax.annotation.Nullable ActivationUponLicenseCreation activationUponLicenseCreation) {
    this.activationUponLicenseCreation = activationUponLicenseCreation;
  }


  public TemplateDto tokenUiMode(@javax.annotation.Nullable TokenUiMode tokenUiMode) {
    this.tokenUiMode = tokenUiMode;
    return this;
  }

  /**
   * Get tokenUiMode
   * @return tokenUiMode
   */
  @javax.annotation.Nullable
  public TokenUiMode getTokenUiMode() {
    return tokenUiMode;
  }

  public void setTokenUiMode(@javax.annotation.Nullable TokenUiMode tokenUiMode) {
    this.tokenUiMode = tokenUiMode;
  }


  public TemplateDto features(@javax.annotation.Nullable List<TemplateFeatureDto> features) {
    this.features = features;
    return this;
  }

  public TemplateDto addFeaturesItem(TemplateFeatureDto featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public List<TemplateFeatureDto> getFeatures() {
    return features;
  }

  public void setFeatures(@javax.annotation.Nullable List<TemplateFeatureDto> features) {
    this.features = features;
  }


  public TemplateDto limitations(@javax.annotation.Nullable List<TemplateLimitationDto> limitations) {
    this.limitations = limitations;
    return this;
  }

  public TemplateDto addLimitationsItem(TemplateLimitationDto limitationsItem) {
    if (this.limitations == null) {
      this.limitations = new ArrayList<>();
    }
    this.limitations.add(limitationsItem);
    return this;
  }

  /**
   * Get limitations
   * @return limitations
   */
  @javax.annotation.Nullable
  public List<TemplateLimitationDto> getLimitations() {
    return limitations;
  }

  public void setLimitations(@javax.annotation.Nullable List<TemplateLimitationDto> limitations) {
    this.limitations = limitations;
  }


  public TemplateDto variables(@javax.annotation.Nullable List<TemplateVariableDto> variables) {
    this.variables = variables;
    return this;
  }

  public TemplateDto addVariablesItem(TemplateVariableDto variablesItem) {
    if (this.variables == null) {
      this.variables = new ArrayList<>();
    }
    this.variables.add(variablesItem);
    return this;
  }

  /**
   * Get variables
   * @return variables
   */
  @javax.annotation.Nullable
  public List<TemplateVariableDto> getVariables() {
    return variables;
  }

  public void setVariables(@javax.annotation.Nullable List<TemplateVariableDto> variables) {
    this.variables = variables;
  }


  public TemplateDto constrainedVariables(@javax.annotation.Nullable List<TemplateConstrainedVariableDto> constrainedVariables) {
    this.constrainedVariables = constrainedVariables;
    return this;
  }

  public TemplateDto addConstrainedVariablesItem(TemplateConstrainedVariableDto constrainedVariablesItem) {
    if (this.constrainedVariables == null) {
      this.constrainedVariables = new ArrayList<>();
    }
    this.constrainedVariables.add(constrainedVariablesItem);
    return this;
  }

  /**
   * Get constrainedVariables
   * @return constrainedVariables
   */
  @javax.annotation.Nullable
  public List<TemplateConstrainedVariableDto> getConstrainedVariables() {
    return constrainedVariables;
  }

  public void setConstrainedVariables(@javax.annotation.Nullable List<TemplateConstrainedVariableDto> constrainedVariables) {
    this.constrainedVariables = constrainedVariables;
  }


  public TemplateDto provisioningMode(@javax.annotation.Nullable ProvisioningMode provisioningMode) {
    this.provisioningMode = provisioningMode;
    return this;
  }

  /**
   * Get provisioningMode
   * @return provisioningMode
   */
  @javax.annotation.Nullable
  public ProvisioningMode getProvisioningMode() {
    return provisioningMode;
  }

  public void setProvisioningMode(@javax.annotation.Nullable ProvisioningMode provisioningMode) {
    this.provisioningMode = provisioningMode;
  }


  public TemplateDto sessionPeriod(@javax.annotation.Nullable Integer sessionPeriod) {
    this.sessionPeriod = sessionPeriod;
    return this;
  }

  /**
   * Get sessionPeriod
   * @return sessionPeriod
   */
  @javax.annotation.Nullable
  public Integer getSessionPeriod() {
    return sessionPeriod;
  }

  public void setSessionPeriod(@javax.annotation.Nullable Integer sessionPeriod) {
    this.sessionPeriod = sessionPeriod;
  }


  public TemplateDto maxFloatingSessionsWithSameClientId(@javax.annotation.Nullable Integer maxFloatingSessionsWithSameClientId) {
    this.maxFloatingSessionsWithSameClientId = maxFloatingSessionsWithSameClientId;
    return this;
  }

  /**
   * Get maxFloatingSessionsWithSameClientId
   * @return maxFloatingSessionsWithSameClientId
   */
  @javax.annotation.Nullable
  public Integer getMaxFloatingSessionsWithSameClientId() {
    return maxFloatingSessionsWithSameClientId;
  }

  public void setMaxFloatingSessionsWithSameClientId(@javax.annotation.Nullable Integer maxFloatingSessionsWithSameClientId) {
    this.maxFloatingSessionsWithSameClientId = maxFloatingSessionsWithSameClientId;
  }


  public TemplateDto isTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
    return this;
  }

  /**
   * Get isTemporary
   * @return isTemporary
   */
  @javax.annotation.Nullable
  public Boolean getIsTemporary() {
    return isTemporary;
  }

  public void setIsTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
  }


  public TemplateDto hasStrictHeartbeats(@javax.annotation.Nullable Boolean hasStrictHeartbeats) {
    this.hasStrictHeartbeats = hasStrictHeartbeats;
    return this;
  }

  /**
   * Get hasStrictHeartbeats
   * @return hasStrictHeartbeats
   */
  @javax.annotation.Nullable
  public Boolean getHasStrictHeartbeats() {
    return hasStrictHeartbeats;
  }

  public void setHasStrictHeartbeats(@javax.annotation.Nullable Boolean hasStrictHeartbeats) {
    this.hasStrictHeartbeats = hasStrictHeartbeats;
  }


  public TemplateDto createdDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
    return this;
  }

  /**
   * Get createdDateUtc
   * @return createdDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateUtc() {
    return createdDateUtc;
  }

  public void setCreatedDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
  }


  public TemplateDto modifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
    return this;
  }

  /**
   * Get modifiedDateUtc
   * @return modifiedDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDateUtc() {
    return modifiedDateUtc;
  }

  public void setModifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
  }


  public TemplateDto lastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public TemplateDto softwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
    return this;
  }

  /**
   * Get softwareReleaseLimitation
   * @return softwareReleaseLimitation
   */
  @javax.annotation.Nullable
  public SoftwareReleaseLimitationDto getSoftwareReleaseLimitation() {
    return softwareReleaseLimitation;
  }

  public void setSoftwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
  }


  public TemplateDto supportsLicenseUserGroups(@javax.annotation.Nullable Boolean supportsLicenseUserGroups) {
    this.supportsLicenseUserGroups = supportsLicenseUserGroups;
    return this;
  }

  /**
   * Get supportsLicenseUserGroups
   * @return supportsLicenseUserGroups
   */
  @javax.annotation.Nullable
  public Boolean getSupportsLicenseUserGroups() {
    return supportsLicenseUserGroups;
  }

  public void setSupportsLicenseUserGroups(@javax.annotation.Nullable Boolean supportsLicenseUserGroups) {
    this.supportsLicenseUserGroups = supportsLicenseUserGroups;
  }


  public TemplateDto heartbeatSamplingRate(@javax.annotation.Nullable Integer heartbeatSamplingRate) {
    this.heartbeatSamplingRate = heartbeatSamplingRate;
    return this;
  }

  /**
   * Get heartbeatSamplingRate
   * @return heartbeatSamplingRate
   */
  @javax.annotation.Nullable
  public Integer getHeartbeatSamplingRate() {
    return heartbeatSamplingRate;
  }

  public void setHeartbeatSamplingRate(@javax.annotation.Nullable Integer heartbeatSamplingRate) {
    this.heartbeatSamplingRate = heartbeatSamplingRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateDto templateDto = (TemplateDto) o;
    return Objects.equals(this.id, templateDto.id) &&
        Objects.equals(this.productId, templateDto.productId) &&
        Objects.equals(this.productName, templateDto.productName) &&
        Objects.equals(this.name, templateDto.name) &&
        Objects.equals(this.description, templateDto.description) &&
        Objects.equals(this.shortDescription, templateDto.shortDescription) &&
        Objects.equals(this.isActive, templateDto.isActive) &&
        Objects.equals(this.tokenLimit, templateDto.tokenLimit) &&
        Objects.equals(this.goodwillTokenLimit, templateDto.goodwillTokenLimit) &&
        Objects.equals(this.floatingTokenLimit, templateDto.floatingTokenLimit) &&
        Objects.equals(this.enforceFloatingLimit, templateDto.enforceFloatingLimit) &&
        Objects.equals(this.userLimit, templateDto.userLimit) &&
        Objects.equals(this.licenseTypeId, templateDto.licenseTypeId) &&
        Objects.equals(this.licenseType, templateDto.licenseType) &&
        Objects.equals(this.isSoftwareReleaseLimitationAdjustable, templateDto.isSoftwareReleaseLimitationAdjustable) &&
        Objects.equals(this.softwareReleaseLimitationId, templateDto.softwareReleaseLimitationId) &&
        Objects.equals(this.allowsInvalidSoftwareRelease, templateDto.allowsInvalidSoftwareRelease) &&
        Objects.equals(this.isExpirationModeAdjustable, templateDto.isExpirationModeAdjustable) &&
        Objects.equals(this.expirationMode, templateDto.expirationMode) &&
        Objects.equals(this.expirationDateUtc, templateDto.expirationDateUtc) &&
        Objects.equals(this.validDaysCount, templateDto.validDaysCount) &&
        Objects.equals(this.trialDaysCount, templateDto.trialDaysCount) &&
        Objects.equals(this.heartbeatMode, templateDto.heartbeatMode) &&
        Objects.equals(this.heartbeatPeriod, templateDto.heartbeatPeriod) &&
        Objects.equals(this.freeRide, templateDto.freeRide) &&
        Objects.equals(this.clientType, templateDto.clientType) &&
        Objects.equals(this.activationUponLicenseCreation, templateDto.activationUponLicenseCreation) &&
        Objects.equals(this.tokenUiMode, templateDto.tokenUiMode) &&
        Objects.equals(this.features, templateDto.features) &&
        Objects.equals(this.limitations, templateDto.limitations) &&
        Objects.equals(this.variables, templateDto.variables) &&
        Objects.equals(this.constrainedVariables, templateDto.constrainedVariables) &&
        Objects.equals(this.provisioningMode, templateDto.provisioningMode) &&
        Objects.equals(this.sessionPeriod, templateDto.sessionPeriod) &&
        Objects.equals(this.maxFloatingSessionsWithSameClientId, templateDto.maxFloatingSessionsWithSameClientId) &&
        Objects.equals(this.isTemporary, templateDto.isTemporary) &&
        Objects.equals(this.hasStrictHeartbeats, templateDto.hasStrictHeartbeats) &&
        Objects.equals(this.createdDateUtc, templateDto.createdDateUtc) &&
        Objects.equals(this.modifiedDateUtc, templateDto.modifiedDateUtc) &&
        Objects.equals(this.lastModifiedBy, templateDto.lastModifiedBy) &&
        Objects.equals(this.softwareReleaseLimitation, templateDto.softwareReleaseLimitation) &&
        Objects.equals(this.supportsLicenseUserGroups, templateDto.supportsLicenseUserGroups) &&
        Objects.equals(this.heartbeatSamplingRate, templateDto.heartbeatSamplingRate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productId, productName, name, description, shortDescription, isActive, tokenLimit, goodwillTokenLimit, floatingTokenLimit, enforceFloatingLimit, userLimit, licenseTypeId, licenseType, isSoftwareReleaseLimitationAdjustable, softwareReleaseLimitationId, allowsInvalidSoftwareRelease, isExpirationModeAdjustable, expirationMode, expirationDateUtc, validDaysCount, trialDaysCount, heartbeatMode, heartbeatPeriod, freeRide, clientType, activationUponLicenseCreation, tokenUiMode, features, limitations, variables, constrainedVariables, provisioningMode, sessionPeriod, maxFloatingSessionsWithSameClientId, isTemporary, hasStrictHeartbeats, createdDateUtc, modifiedDateUtc, lastModifiedBy, softwareReleaseLimitation, supportsLicenseUserGroups, heartbeatSamplingRate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    tokenLimit: ").append(toIndentedString(tokenLimit)).append("\n");
    sb.append("    goodwillTokenLimit: ").append(toIndentedString(goodwillTokenLimit)).append("\n");
    sb.append("    floatingTokenLimit: ").append(toIndentedString(floatingTokenLimit)).append("\n");
    sb.append("    enforceFloatingLimit: ").append(toIndentedString(enforceFloatingLimit)).append("\n");
    sb.append("    userLimit: ").append(toIndentedString(userLimit)).append("\n");
    sb.append("    licenseTypeId: ").append(toIndentedString(licenseTypeId)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    isSoftwareReleaseLimitationAdjustable: ").append(toIndentedString(isSoftwareReleaseLimitationAdjustable)).append("\n");
    sb.append("    softwareReleaseLimitationId: ").append(toIndentedString(softwareReleaseLimitationId)).append("\n");
    sb.append("    allowsInvalidSoftwareRelease: ").append(toIndentedString(allowsInvalidSoftwareRelease)).append("\n");
    sb.append("    isExpirationModeAdjustable: ").append(toIndentedString(isExpirationModeAdjustable)).append("\n");
    sb.append("    expirationMode: ").append(toIndentedString(expirationMode)).append("\n");
    sb.append("    expirationDateUtc: ").append(toIndentedString(expirationDateUtc)).append("\n");
    sb.append("    validDaysCount: ").append(toIndentedString(validDaysCount)).append("\n");
    sb.append("    trialDaysCount: ").append(toIndentedString(trialDaysCount)).append("\n");
    sb.append("    heartbeatMode: ").append(toIndentedString(heartbeatMode)).append("\n");
    sb.append("    heartbeatPeriod: ").append(toIndentedString(heartbeatPeriod)).append("\n");
    sb.append("    freeRide: ").append(toIndentedString(freeRide)).append("\n");
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    activationUponLicenseCreation: ").append(toIndentedString(activationUponLicenseCreation)).append("\n");
    sb.append("    tokenUiMode: ").append(toIndentedString(tokenUiMode)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    limitations: ").append(toIndentedString(limitations)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    constrainedVariables: ").append(toIndentedString(constrainedVariables)).append("\n");
    sb.append("    provisioningMode: ").append(toIndentedString(provisioningMode)).append("\n");
    sb.append("    sessionPeriod: ").append(toIndentedString(sessionPeriod)).append("\n");
    sb.append("    maxFloatingSessionsWithSameClientId: ").append(toIndentedString(maxFloatingSessionsWithSameClientId)).append("\n");
    sb.append("    isTemporary: ").append(toIndentedString(isTemporary)).append("\n");
    sb.append("    hasStrictHeartbeats: ").append(toIndentedString(hasStrictHeartbeats)).append("\n");
    sb.append("    createdDateUtc: ").append(toIndentedString(createdDateUtc)).append("\n");
    sb.append("    modifiedDateUtc: ").append(toIndentedString(modifiedDateUtc)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    softwareReleaseLimitation: ").append(toIndentedString(softwareReleaseLimitation)).append("\n");
    sb.append("    supportsLicenseUserGroups: ").append(toIndentedString(supportsLicenseUserGroups)).append("\n");
    sb.append("    heartbeatSamplingRate: ").append(toIndentedString(heartbeatSamplingRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("id", "product_id", "product_name", "name", "description", "short_description", "is_active", "token_limit", "goodwill_token_limit", "floating_token_limit", "enforce_floating_limit", "user_limit", "license_type_id", "license_type", "is_software_release_limitation_adjustable", "software_release_limitation_id", "allows_invalid_software_release", "is_expiration_mode_adjustable", "expiration_mode", "expiration_date_utc", "valid_days_count", "trial_days_count", "heartbeat_mode", "heartbeat_period", "free_ride", "client_type", "activation_upon_license_creation", "token_ui_mode", "features", "limitations", "variables", "constrained_variables", "provisioning_mode", "session_period", "max_floating_sessions_with_same_client_id", "is_temporary", "has_strict_heartbeats", "created_date_utc", "modified_date_utc", "last_modified_by", "software_release_limitation", "supports_license_user_groups", "heartbeat_sampling_rate"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("id", "product_id", "name", "token_limit"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TemplateDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TemplateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TemplateDto is not found in the empty JSON string", TemplateDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TemplateDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TemplateDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TemplateDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if ((jsonObj.get("product_name") != null && !jsonObj.get("product_name").isJsonNull()) && !jsonObj.get("product_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_name").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
      if ((jsonObj.get("license_type_id") != null && !jsonObj.get("license_type_id").isJsonNull()) && !jsonObj.get("license_type_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_type_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_type_id").toString()));
      }
      // validate the optional field `license_type`
      if (jsonObj.get("license_type") != null && !jsonObj.get("license_type").isJsonNull()) {
        LicenseTypeDto.validateJsonElement(jsonObj.get("license_type"));
      }
      if ((jsonObj.get("software_release_limitation_id") != null && !jsonObj.get("software_release_limitation_id").isJsonNull()) && !jsonObj.get("software_release_limitation_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `software_release_limitation_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("software_release_limitation_id").toString()));
      }
      // validate the optional field `expiration_mode`
      if (jsonObj.get("expiration_mode") != null && !jsonObj.get("expiration_mode").isJsonNull()) {
        ExpirationMode.validateJsonElement(jsonObj.get("expiration_mode"));
      }
      // validate the optional field `heartbeat_mode`
      if (jsonObj.get("heartbeat_mode") != null && !jsonObj.get("heartbeat_mode").isJsonNull()) {
        HeartBeatMode.validateJsonElement(jsonObj.get("heartbeat_mode"));
      }
      // validate the optional field `client_type`
      if (jsonObj.get("client_type") != null && !jsonObj.get("client_type").isJsonNull()) {
        ClientType.validateJsonElement(jsonObj.get("client_type"));
      }
      // validate the optional field `activation_upon_license_creation`
      if (jsonObj.get("activation_upon_license_creation") != null && !jsonObj.get("activation_upon_license_creation").isJsonNull()) {
        ActivationUponLicenseCreation.validateJsonElement(jsonObj.get("activation_upon_license_creation"));
      }
      // validate the optional field `token_ui_mode`
      if (jsonObj.get("token_ui_mode") != null && !jsonObj.get("token_ui_mode").isJsonNull()) {
        TokenUiMode.validateJsonElement(jsonObj.get("token_ui_mode"));
      }
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) {
        JsonArray jsonArrayfeatures = jsonObj.getAsJsonArray("features");
        if (jsonArrayfeatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("features").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
          }

          // validate the optional field `features` (array)
          for (int i = 0; i < jsonArrayfeatures.size(); i++) {
            TemplateFeatureDto.validateJsonElement(jsonArrayfeatures.get(i));
          };
        }
      }
      if (jsonObj.get("limitations") != null && !jsonObj.get("limitations").isJsonNull()) {
        JsonArray jsonArraylimitations = jsonObj.getAsJsonArray("limitations");
        if (jsonArraylimitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("limitations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `limitations` to be an array in the JSON string but got `%s`", jsonObj.get("limitations").toString()));
          }

          // validate the optional field `limitations` (array)
          for (int i = 0; i < jsonArraylimitations.size(); i++) {
            TemplateLimitationDto.validateJsonElement(jsonArraylimitations.get(i));
          };
        }
      }
      if (jsonObj.get("variables") != null && !jsonObj.get("variables").isJsonNull()) {
        JsonArray jsonArrayvariables = jsonObj.getAsJsonArray("variables");
        if (jsonArrayvariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `variables` to be an array in the JSON string but got `%s`", jsonObj.get("variables").toString()));
          }

          // validate the optional field `variables` (array)
          for (int i = 0; i < jsonArrayvariables.size(); i++) {
            TemplateVariableDto.validateJsonElement(jsonArrayvariables.get(i));
          };
        }
      }
      if (jsonObj.get("constrained_variables") != null && !jsonObj.get("constrained_variables").isJsonNull()) {
        JsonArray jsonArrayconstrainedVariables = jsonObj.getAsJsonArray("constrained_variables");
        if (jsonArrayconstrainedVariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("constrained_variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `constrained_variables` to be an array in the JSON string but got `%s`", jsonObj.get("constrained_variables").toString()));
          }

          // validate the optional field `constrained_variables` (array)
          for (int i = 0; i < jsonArrayconstrainedVariables.size(); i++) {
            TemplateConstrainedVariableDto.validateJsonElement(jsonArrayconstrainedVariables.get(i));
          };
        }
      }
      // validate the optional field `provisioning_mode`
      if (jsonObj.get("provisioning_mode") != null && !jsonObj.get("provisioning_mode").isJsonNull()) {
        ProvisioningMode.validateJsonElement(jsonObj.get("provisioning_mode"));
      }
      if ((jsonObj.get("last_modified_by") != null && !jsonObj.get("last_modified_by").isJsonNull()) && !jsonObj.get("last_modified_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_by").toString()));
      }
      // validate the optional field `software_release_limitation`
      if (jsonObj.get("software_release_limitation") != null && !jsonObj.get("software_release_limitation").isJsonNull()) {
        SoftwareReleaseLimitationDto.validateJsonElement(jsonObj.get("software_release_limitation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TemplateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TemplateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TemplateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TemplateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<TemplateDto>() {
           @Override
           public void write(JsonWriter out, TemplateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TemplateDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TemplateDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TemplateDto
   * @throws IOException if the JSON string is invalid with respect to TemplateDto
   */
  public static TemplateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TemplateDto.class);
  }

  /**
   * Convert an instance of TemplateDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

