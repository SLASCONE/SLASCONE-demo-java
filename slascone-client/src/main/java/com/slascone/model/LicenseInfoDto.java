/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.ClientType;
import com.slascone.model.CustomerAccountDto;
import com.slascone.model.DateValidity;
import com.slascone.model.LicenseTypeDto;
import com.slascone.model.LicenseUserDto;
import com.slascone.model.ProvisioningConstrainedVariableDto;
import com.slascone.model.ProvisioningFeatureDto;
import com.slascone.model.ProvisioningLimitationDto;
import com.slascone.model.ProvisioningMode;
import com.slascone.model.ProvisioningVariableDto;
import com.slascone.model.SoftwareReleaseLimitationDto;
import com.slascone.model.SoftwareShipmentDto;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * LicenseInfoDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class LicenseInfoDto {
  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  @javax.annotation.Nullable
  private CustomerAccountDto customer;

  public static final String SERIALIZED_NAME_LICENSE_NAME = "license_name";
  @SerializedName(SERIALIZED_NAME_LICENSE_NAME)
  @javax.annotation.Nullable
  private String licenseName;

  public static final String SERIALIZED_NAME_LICENSE_KEY = "license_key";
  @SerializedName(SERIALIZED_NAME_LICENSE_KEY)
  @javax.annotation.Nullable
  private String licenseKey;

  public static final String SERIALIZED_NAME_TOKEN_KEY = "token_key";
  @SerializedName(SERIALIZED_NAME_TOKEN_KEY)
  @javax.annotation.Nullable
  private UUID tokenKey;

  public static final String SERIALIZED_NAME_LEGACY_LICENSE_KEY = "legacy_license_key";
  @SerializedName(SERIALIZED_NAME_LEGACY_LICENSE_KEY)
  @javax.annotation.Nullable
  private String legacyLicenseKey;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_DESCRIPTION = "client_description";
  @SerializedName(SERIALIZED_NAME_CLIENT_DESCRIPTION)
  @javax.annotation.Nullable
  private String clientDescription;

  public static final String SERIALIZED_NAME_PRODUCT_NAME = "product_name";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  @javax.annotation.Nullable
  private String productName;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nullable
  private UUID productId;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "template_name";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  @javax.annotation.Nullable
  private String templateName;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  @javax.annotation.Nullable
  private UUID templateId;

  public static final String SERIALIZED_NAME_PROVISIONING_MODE = "provisioning_mode";
  @SerializedName(SERIALIZED_NAME_PROVISIONING_MODE)
  @javax.annotation.Nullable
  private ProvisioningMode provisioningMode;

  public static final String SERIALIZED_NAME_CLIENT_TYPE = "client_type";
  @SerializedName(SERIALIZED_NAME_CLIENT_TYPE)
  @javax.annotation.Nullable
  private ClientType clientType;

  public static final String SERIALIZED_NAME_IS_LICENSE_ACTIVE = "is_license_active";
  @SerializedName(SERIALIZED_NAME_IS_LICENSE_ACTIVE)
  @javax.annotation.Nullable
  private Boolean isLicenseActive;

  public static final String SERIALIZED_NAME_IS_LICENSE_EXPIRED = "is_license_expired";
  @SerializedName(SERIALIZED_NAME_IS_LICENSE_EXPIRED)
  @javax.annotation.Nullable
  private Boolean isLicenseExpired;

  public static final String SERIALIZED_NAME_IS_LICENSE_VALID = "is_license_valid";
  @SerializedName(SERIALIZED_NAME_IS_LICENSE_VALID)
  @javax.annotation.Nullable
  private Boolean isLicenseValid;

  public static final String SERIALIZED_NAME_START_DATE_UTC = "start_date_utc";
  @SerializedName(SERIALIZED_NAME_START_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime startDateUtc;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE_UTC = "expiration_date_utc";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime expirationDateUtc;

  public static final String SERIALIZED_NAME_DATE_VALIDITY = "date_validity";
  @SerializedName(SERIALIZED_NAME_DATE_VALIDITY)
  @javax.annotation.Nullable
  private DateValidity dateValidity;

  public static final String SERIALIZED_NAME_TOKEN_LIMIT = "token_limit";
  @SerializedName(SERIALIZED_NAME_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer tokenLimit;

  public static final String SERIALIZED_NAME_FLOATING_TOKEN_LIMIT = "floating_token_limit";
  @SerializedName(SERIALIZED_NAME_FLOATING_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer floatingTokenLimit;

  public static final String SERIALIZED_NAME_IS_TEMPORARY = "is_temporary";
  @SerializedName(SERIALIZED_NAME_IS_TEMPORARY)
  @javax.annotation.Nullable
  private Boolean isTemporary;

  public static final String SERIALIZED_NAME_IS_SOFTWARE_VERSION_VALID = "is_software_version_valid";
  @SerializedName(SERIALIZED_NAME_IS_SOFTWARE_VERSION_VALID)
  @javax.annotation.Nullable
  private Boolean isSoftwareVersionValid;

  public static final String SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION = "software_release_limitation";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION)
  @javax.annotation.Nullable
  private SoftwareReleaseLimitationDto softwareReleaseLimitation;

  public static final String SERIALIZED_NAME_IS_NEWER_SOFTWARE_SHIPMENT_AVAILABLE = "is_newer_software_shipment_available";
  @SerializedName(SERIALIZED_NAME_IS_NEWER_SOFTWARE_SHIPMENT_AVAILABLE)
  @javax.annotation.Nullable
  private Boolean isNewerSoftwareShipmentAvailable;

  public static final String SERIALIZED_NAME_LATEST_SOFTWARE_SHIPMENT = "latest_software_shipment";
  @SerializedName(SERIALIZED_NAME_LATEST_SOFTWARE_SHIPMENT)
  @javax.annotation.Nullable
  private SoftwareShipmentDto latestSoftwareShipment;

  public static final String SERIALIZED_NAME_SESSION_PERIOD = "session_period";
  @SerializedName(SERIALIZED_NAME_SESSION_PERIOD)
  @javax.annotation.Nullable
  private Integer sessionPeriod;

  public static final String SERIALIZED_NAME_HEARTBEAT_PERIOD = "heartbeat_period";
  @SerializedName(SERIALIZED_NAME_HEARTBEAT_PERIOD)
  @javax.annotation.Nullable
  private Integer heartbeatPeriod;

  public static final String SERIALIZED_NAME_FREERIDE = "freeride";
  @SerializedName(SERIALIZED_NAME_FREERIDE)
  @javax.annotation.Nullable
  private Integer freeride;

  public static final String SERIALIZED_NAME_ENFORCE_SOFTWARE_VERSION_UPGRADE = "enforce_software_version_upgrade";
  @SerializedName(SERIALIZED_NAME_ENFORCE_SOFTWARE_VERSION_UPGRADE)
  @javax.annotation.Nullable
  private Boolean enforceSoftwareVersionUpgrade;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  @javax.annotation.Nullable
  private List<ProvisioningFeatureDto> features;

  public static final String SERIALIZED_NAME_LIMITATIONS = "limitations";
  @SerializedName(SERIALIZED_NAME_LIMITATIONS)
  @javax.annotation.Nullable
  private List<ProvisioningLimitationDto> limitations;

  public static final String SERIALIZED_NAME_VARIABLES = "variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  @javax.annotation.Nullable
  private List<ProvisioningVariableDto> variables;

  public static final String SERIALIZED_NAME_CONSTRAINED_VARIABLES = "constrained_variables";
  @SerializedName(SERIALIZED_NAME_CONSTRAINED_VARIABLES)
  @javax.annotation.Nullable
  private List<ProvisioningConstrainedVariableDto> constrainedVariables;

  public static final String SERIALIZED_NAME_LICENSE_USERS = "license_users";
  @SerializedName(SERIALIZED_NAME_LICENSE_USERS)
  @javax.annotation.Nullable
  private List<LicenseUserDto> licenseUsers;

  public static final String SERIALIZED_NAME_CREATED_DATE_UTC = "created_date_utc";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime createdDateUtc;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "license_type";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  @javax.annotation.Nullable
  private LicenseTypeDto licenseType;

  public LicenseInfoDto() {
  }

  public LicenseInfoDto customer(@javax.annotation.Nullable CustomerAccountDto customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public CustomerAccountDto getCustomer() {
    return customer;
  }

  public void setCustomer(@javax.annotation.Nullable CustomerAccountDto customer) {
    this.customer = customer;
  }


  public LicenseInfoDto licenseName(@javax.annotation.Nullable String licenseName) {
    this.licenseName = licenseName;
    return this;
  }

  /**
   * Get licenseName
   * @return licenseName
   */
  @javax.annotation.Nullable
  public String getLicenseName() {
    return licenseName;
  }

  public void setLicenseName(@javax.annotation.Nullable String licenseName) {
    this.licenseName = licenseName;
  }


  public LicenseInfoDto licenseKey(@javax.annotation.Nullable String licenseKey) {
    this.licenseKey = licenseKey;
    return this;
  }

  /**
   * Get licenseKey
   * @return licenseKey
   */
  @javax.annotation.Nullable
  public String getLicenseKey() {
    return licenseKey;
  }

  public void setLicenseKey(@javax.annotation.Nullable String licenseKey) {
    this.licenseKey = licenseKey;
  }


  public LicenseInfoDto tokenKey(@javax.annotation.Nullable UUID tokenKey) {
    this.tokenKey = tokenKey;
    return this;
  }

  /**
   * Get tokenKey
   * @return tokenKey
   */
  @javax.annotation.Nullable
  public UUID getTokenKey() {
    return tokenKey;
  }

  public void setTokenKey(@javax.annotation.Nullable UUID tokenKey) {
    this.tokenKey = tokenKey;
  }


  public LicenseInfoDto legacyLicenseKey(@javax.annotation.Nullable String legacyLicenseKey) {
    this.legacyLicenseKey = legacyLicenseKey;
    return this;
  }

  /**
   * Get legacyLicenseKey
   * @return legacyLicenseKey
   */
  @javax.annotation.Nullable
  public String getLegacyLicenseKey() {
    return legacyLicenseKey;
  }

  public void setLegacyLicenseKey(@javax.annotation.Nullable String legacyLicenseKey) {
    this.legacyLicenseKey = legacyLicenseKey;
  }


  public LicenseInfoDto clientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }


  public LicenseInfoDto clientDescription(@javax.annotation.Nullable String clientDescription) {
    this.clientDescription = clientDescription;
    return this;
  }

  /**
   * Get clientDescription
   * @return clientDescription
   */
  @javax.annotation.Nullable
  public String getClientDescription() {
    return clientDescription;
  }

  public void setClientDescription(@javax.annotation.Nullable String clientDescription) {
    this.clientDescription = clientDescription;
  }


  public LicenseInfoDto productName(@javax.annotation.Nullable String productName) {
    this.productName = productName;
    return this;
  }

  /**
   * Get productName
   * @return productName
   */
  @javax.annotation.Nullable
  public String getProductName() {
    return productName;
  }

  public void setProductName(@javax.annotation.Nullable String productName) {
    this.productName = productName;
  }


  public LicenseInfoDto productId(@javax.annotation.Nullable UUID productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public UUID getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nullable UUID productId) {
    this.productId = productId;
  }


  public LicenseInfoDto templateName(@javax.annotation.Nullable String templateName) {
    this.templateName = templateName;
    return this;
  }

  /**
   * Get templateName
   * @return templateName
   */
  @javax.annotation.Nullable
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(@javax.annotation.Nullable String templateName) {
    this.templateName = templateName;
  }


  public LicenseInfoDto templateId(@javax.annotation.Nullable UUID templateId) {
    this.templateId = templateId;
    return this;
  }

  /**
   * Get templateId
   * @return templateId
   */
  @javax.annotation.Nullable
  public UUID getTemplateId() {
    return templateId;
  }

  public void setTemplateId(@javax.annotation.Nullable UUID templateId) {
    this.templateId = templateId;
  }


  public LicenseInfoDto provisioningMode(@javax.annotation.Nullable ProvisioningMode provisioningMode) {
    this.provisioningMode = provisioningMode;
    return this;
  }

  /**
   * Get provisioningMode
   * @return provisioningMode
   */
  @javax.annotation.Nullable
  public ProvisioningMode getProvisioningMode() {
    return provisioningMode;
  }

  public void setProvisioningMode(@javax.annotation.Nullable ProvisioningMode provisioningMode) {
    this.provisioningMode = provisioningMode;
  }


  public LicenseInfoDto clientType(@javax.annotation.Nullable ClientType clientType) {
    this.clientType = clientType;
    return this;
  }

  /**
   * Get clientType
   * @return clientType
   */
  @javax.annotation.Nullable
  public ClientType getClientType() {
    return clientType;
  }

  public void setClientType(@javax.annotation.Nullable ClientType clientType) {
    this.clientType = clientType;
  }


  public LicenseInfoDto isLicenseActive(@javax.annotation.Nullable Boolean isLicenseActive) {
    this.isLicenseActive = isLicenseActive;
    return this;
  }

  /**
   * Get isLicenseActive
   * @return isLicenseActive
   */
  @javax.annotation.Nullable
  public Boolean getIsLicenseActive() {
    return isLicenseActive;
  }

  public void setIsLicenseActive(@javax.annotation.Nullable Boolean isLicenseActive) {
    this.isLicenseActive = isLicenseActive;
  }


  public LicenseInfoDto isLicenseExpired(@javax.annotation.Nullable Boolean isLicenseExpired) {
    this.isLicenseExpired = isLicenseExpired;
    return this;
  }

  /**
   * Get isLicenseExpired
   * @return isLicenseExpired
   */
  @javax.annotation.Nullable
  public Boolean getIsLicenseExpired() {
    return isLicenseExpired;
  }

  public void setIsLicenseExpired(@javax.annotation.Nullable Boolean isLicenseExpired) {
    this.isLicenseExpired = isLicenseExpired;
  }


  public LicenseInfoDto isLicenseValid(@javax.annotation.Nullable Boolean isLicenseValid) {
    this.isLicenseValid = isLicenseValid;
    return this;
  }

  /**
   * Get isLicenseValid
   * @return isLicenseValid
   */
  @javax.annotation.Nullable
  public Boolean getIsLicenseValid() {
    return isLicenseValid;
  }

  public void setIsLicenseValid(@javax.annotation.Nullable Boolean isLicenseValid) {
    this.isLicenseValid = isLicenseValid;
  }


  public LicenseInfoDto startDateUtc(@javax.annotation.Nullable OffsetDateTime startDateUtc) {
    this.startDateUtc = startDateUtc;
    return this;
  }

  /**
   * Get startDateUtc
   * @return startDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDateUtc() {
    return startDateUtc;
  }

  public void setStartDateUtc(@javax.annotation.Nullable OffsetDateTime startDateUtc) {
    this.startDateUtc = startDateUtc;
  }


  public LicenseInfoDto expirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
    return this;
  }

  /**
   * Get expirationDateUtc
   * @return expirationDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDateUtc() {
    return expirationDateUtc;
  }

  public void setExpirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
  }


  public LicenseInfoDto dateValidity(@javax.annotation.Nullable DateValidity dateValidity) {
    this.dateValidity = dateValidity;
    return this;
  }

  /**
   * Get dateValidity
   * @return dateValidity
   */
  @javax.annotation.Nullable
  public DateValidity getDateValidity() {
    return dateValidity;
  }

  public void setDateValidity(@javax.annotation.Nullable DateValidity dateValidity) {
    this.dateValidity = dateValidity;
  }


  public LicenseInfoDto tokenLimit(@javax.annotation.Nullable Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
    return this;
  }

  /**
   * Get tokenLimit
   * @return tokenLimit
   */
  @javax.annotation.Nullable
  public Integer getTokenLimit() {
    return tokenLimit;
  }

  public void setTokenLimit(@javax.annotation.Nullable Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
  }


  public LicenseInfoDto floatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
    return this;
  }

  /**
   * Get floatingTokenLimit
   * @return floatingTokenLimit
   */
  @javax.annotation.Nullable
  public Integer getFloatingTokenLimit() {
    return floatingTokenLimit;
  }

  public void setFloatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
  }


  public LicenseInfoDto isTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
    return this;
  }

  /**
   * Get isTemporary
   * @return isTemporary
   */
  @javax.annotation.Nullable
  public Boolean getIsTemporary() {
    return isTemporary;
  }

  public void setIsTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
  }


  public LicenseInfoDto isSoftwareVersionValid(@javax.annotation.Nullable Boolean isSoftwareVersionValid) {
    this.isSoftwareVersionValid = isSoftwareVersionValid;
    return this;
  }

  /**
   * Get isSoftwareVersionValid
   * @return isSoftwareVersionValid
   */
  @javax.annotation.Nullable
  public Boolean getIsSoftwareVersionValid() {
    return isSoftwareVersionValid;
  }

  public void setIsSoftwareVersionValid(@javax.annotation.Nullable Boolean isSoftwareVersionValid) {
    this.isSoftwareVersionValid = isSoftwareVersionValid;
  }


  public LicenseInfoDto softwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
    return this;
  }

  /**
   * Get softwareReleaseLimitation
   * @return softwareReleaseLimitation
   */
  @javax.annotation.Nullable
  public SoftwareReleaseLimitationDto getSoftwareReleaseLimitation() {
    return softwareReleaseLimitation;
  }

  public void setSoftwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
  }


  public LicenseInfoDto isNewerSoftwareShipmentAvailable(@javax.annotation.Nullable Boolean isNewerSoftwareShipmentAvailable) {
    this.isNewerSoftwareShipmentAvailable = isNewerSoftwareShipmentAvailable;
    return this;
  }

  /**
   * Get isNewerSoftwareShipmentAvailable
   * @return isNewerSoftwareShipmentAvailable
   */
  @javax.annotation.Nullable
  public Boolean getIsNewerSoftwareShipmentAvailable() {
    return isNewerSoftwareShipmentAvailable;
  }

  public void setIsNewerSoftwareShipmentAvailable(@javax.annotation.Nullable Boolean isNewerSoftwareShipmentAvailable) {
    this.isNewerSoftwareShipmentAvailable = isNewerSoftwareShipmentAvailable;
  }


  public LicenseInfoDto latestSoftwareShipment(@javax.annotation.Nullable SoftwareShipmentDto latestSoftwareShipment) {
    this.latestSoftwareShipment = latestSoftwareShipment;
    return this;
  }

  /**
   * Get latestSoftwareShipment
   * @return latestSoftwareShipment
   */
  @javax.annotation.Nullable
  public SoftwareShipmentDto getLatestSoftwareShipment() {
    return latestSoftwareShipment;
  }

  public void setLatestSoftwareShipment(@javax.annotation.Nullable SoftwareShipmentDto latestSoftwareShipment) {
    this.latestSoftwareShipment = latestSoftwareShipment;
  }


  public LicenseInfoDto sessionPeriod(@javax.annotation.Nullable Integer sessionPeriod) {
    this.sessionPeriod = sessionPeriod;
    return this;
  }

  /**
   * Get sessionPeriod
   * @return sessionPeriod
   */
  @javax.annotation.Nullable
  public Integer getSessionPeriod() {
    return sessionPeriod;
  }

  public void setSessionPeriod(@javax.annotation.Nullable Integer sessionPeriod) {
    this.sessionPeriod = sessionPeriod;
  }


  public LicenseInfoDto heartbeatPeriod(@javax.annotation.Nullable Integer heartbeatPeriod) {
    this.heartbeatPeriod = heartbeatPeriod;
    return this;
  }

  /**
   * Get heartbeatPeriod
   * @return heartbeatPeriod
   */
  @javax.annotation.Nullable
  public Integer getHeartbeatPeriod() {
    return heartbeatPeriod;
  }

  public void setHeartbeatPeriod(@javax.annotation.Nullable Integer heartbeatPeriod) {
    this.heartbeatPeriod = heartbeatPeriod;
  }


  public LicenseInfoDto freeride(@javax.annotation.Nullable Integer freeride) {
    this.freeride = freeride;
    return this;
  }

  /**
   * Get freeride
   * @return freeride
   */
  @javax.annotation.Nullable
  public Integer getFreeride() {
    return freeride;
  }

  public void setFreeride(@javax.annotation.Nullable Integer freeride) {
    this.freeride = freeride;
  }


  public LicenseInfoDto enforceSoftwareVersionUpgrade(@javax.annotation.Nullable Boolean enforceSoftwareVersionUpgrade) {
    this.enforceSoftwareVersionUpgrade = enforceSoftwareVersionUpgrade;
    return this;
  }

  /**
   * Get enforceSoftwareVersionUpgrade
   * @return enforceSoftwareVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getEnforceSoftwareVersionUpgrade() {
    return enforceSoftwareVersionUpgrade;
  }

  public void setEnforceSoftwareVersionUpgrade(@javax.annotation.Nullable Boolean enforceSoftwareVersionUpgrade) {
    this.enforceSoftwareVersionUpgrade = enforceSoftwareVersionUpgrade;
  }


  public LicenseInfoDto features(@javax.annotation.Nullable List<ProvisioningFeatureDto> features) {
    this.features = features;
    return this;
  }

  public LicenseInfoDto addFeaturesItem(ProvisioningFeatureDto featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public List<ProvisioningFeatureDto> getFeatures() {
    return features;
  }

  public void setFeatures(@javax.annotation.Nullable List<ProvisioningFeatureDto> features) {
    this.features = features;
  }


  public LicenseInfoDto limitations(@javax.annotation.Nullable List<ProvisioningLimitationDto> limitations) {
    this.limitations = limitations;
    return this;
  }

  public LicenseInfoDto addLimitationsItem(ProvisioningLimitationDto limitationsItem) {
    if (this.limitations == null) {
      this.limitations = new ArrayList<>();
    }
    this.limitations.add(limitationsItem);
    return this;
  }

  /**
   * Get limitations
   * @return limitations
   */
  @javax.annotation.Nullable
  public List<ProvisioningLimitationDto> getLimitations() {
    return limitations;
  }

  public void setLimitations(@javax.annotation.Nullable List<ProvisioningLimitationDto> limitations) {
    this.limitations = limitations;
  }


  public LicenseInfoDto variables(@javax.annotation.Nullable List<ProvisioningVariableDto> variables) {
    this.variables = variables;
    return this;
  }

  public LicenseInfoDto addVariablesItem(ProvisioningVariableDto variablesItem) {
    if (this.variables == null) {
      this.variables = new ArrayList<>();
    }
    this.variables.add(variablesItem);
    return this;
  }

  /**
   * Get variables
   * @return variables
   */
  @javax.annotation.Nullable
  public List<ProvisioningVariableDto> getVariables() {
    return variables;
  }

  public void setVariables(@javax.annotation.Nullable List<ProvisioningVariableDto> variables) {
    this.variables = variables;
  }


  public LicenseInfoDto constrainedVariables(@javax.annotation.Nullable List<ProvisioningConstrainedVariableDto> constrainedVariables) {
    this.constrainedVariables = constrainedVariables;
    return this;
  }

  public LicenseInfoDto addConstrainedVariablesItem(ProvisioningConstrainedVariableDto constrainedVariablesItem) {
    if (this.constrainedVariables == null) {
      this.constrainedVariables = new ArrayList<>();
    }
    this.constrainedVariables.add(constrainedVariablesItem);
    return this;
  }

  /**
   * Get constrainedVariables
   * @return constrainedVariables
   */
  @javax.annotation.Nullable
  public List<ProvisioningConstrainedVariableDto> getConstrainedVariables() {
    return constrainedVariables;
  }

  public void setConstrainedVariables(@javax.annotation.Nullable List<ProvisioningConstrainedVariableDto> constrainedVariables) {
    this.constrainedVariables = constrainedVariables;
  }


  public LicenseInfoDto licenseUsers(@javax.annotation.Nullable List<LicenseUserDto> licenseUsers) {
    this.licenseUsers = licenseUsers;
    return this;
  }

  public LicenseInfoDto addLicenseUsersItem(LicenseUserDto licenseUsersItem) {
    if (this.licenseUsers == null) {
      this.licenseUsers = new ArrayList<>();
    }
    this.licenseUsers.add(licenseUsersItem);
    return this;
  }

  /**
   * Get licenseUsers
   * @return licenseUsers
   */
  @javax.annotation.Nullable
  public List<LicenseUserDto> getLicenseUsers() {
    return licenseUsers;
  }

  public void setLicenseUsers(@javax.annotation.Nullable List<LicenseUserDto> licenseUsers) {
    this.licenseUsers = licenseUsers;
  }


  public LicenseInfoDto createdDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
    return this;
  }

  /**
   * Get createdDateUtc
   * @return createdDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateUtc() {
    return createdDateUtc;
  }

  public void setCreatedDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
  }


  public LicenseInfoDto licenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Get licenseType
   * @return licenseType
   */
  @javax.annotation.Nullable
  public LicenseTypeDto getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseInfoDto licenseInfoDto = (LicenseInfoDto) o;
    return Objects.equals(this.customer, licenseInfoDto.customer) &&
        Objects.equals(this.licenseName, licenseInfoDto.licenseName) &&
        Objects.equals(this.licenseKey, licenseInfoDto.licenseKey) &&
        Objects.equals(this.tokenKey, licenseInfoDto.tokenKey) &&
        Objects.equals(this.legacyLicenseKey, licenseInfoDto.legacyLicenseKey) &&
        Objects.equals(this.clientId, licenseInfoDto.clientId) &&
        Objects.equals(this.clientDescription, licenseInfoDto.clientDescription) &&
        Objects.equals(this.productName, licenseInfoDto.productName) &&
        Objects.equals(this.productId, licenseInfoDto.productId) &&
        Objects.equals(this.templateName, licenseInfoDto.templateName) &&
        Objects.equals(this.templateId, licenseInfoDto.templateId) &&
        Objects.equals(this.provisioningMode, licenseInfoDto.provisioningMode) &&
        Objects.equals(this.clientType, licenseInfoDto.clientType) &&
        Objects.equals(this.isLicenseActive, licenseInfoDto.isLicenseActive) &&
        Objects.equals(this.isLicenseExpired, licenseInfoDto.isLicenseExpired) &&
        Objects.equals(this.isLicenseValid, licenseInfoDto.isLicenseValid) &&
        Objects.equals(this.startDateUtc, licenseInfoDto.startDateUtc) &&
        Objects.equals(this.expirationDateUtc, licenseInfoDto.expirationDateUtc) &&
        Objects.equals(this.dateValidity, licenseInfoDto.dateValidity) &&
        Objects.equals(this.tokenLimit, licenseInfoDto.tokenLimit) &&
        Objects.equals(this.floatingTokenLimit, licenseInfoDto.floatingTokenLimit) &&
        Objects.equals(this.isTemporary, licenseInfoDto.isTemporary) &&
        Objects.equals(this.isSoftwareVersionValid, licenseInfoDto.isSoftwareVersionValid) &&
        Objects.equals(this.softwareReleaseLimitation, licenseInfoDto.softwareReleaseLimitation) &&
        Objects.equals(this.isNewerSoftwareShipmentAvailable, licenseInfoDto.isNewerSoftwareShipmentAvailable) &&
        Objects.equals(this.latestSoftwareShipment, licenseInfoDto.latestSoftwareShipment) &&
        Objects.equals(this.sessionPeriod, licenseInfoDto.sessionPeriod) &&
        Objects.equals(this.heartbeatPeriod, licenseInfoDto.heartbeatPeriod) &&
        Objects.equals(this.freeride, licenseInfoDto.freeride) &&
        Objects.equals(this.enforceSoftwareVersionUpgrade, licenseInfoDto.enforceSoftwareVersionUpgrade) &&
        Objects.equals(this.features, licenseInfoDto.features) &&
        Objects.equals(this.limitations, licenseInfoDto.limitations) &&
        Objects.equals(this.variables, licenseInfoDto.variables) &&
        Objects.equals(this.constrainedVariables, licenseInfoDto.constrainedVariables) &&
        Objects.equals(this.licenseUsers, licenseInfoDto.licenseUsers) &&
        Objects.equals(this.createdDateUtc, licenseInfoDto.createdDateUtc) &&
        Objects.equals(this.licenseType, licenseInfoDto.licenseType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(customer, licenseName, licenseKey, tokenKey, legacyLicenseKey, clientId, clientDescription, productName, productId, templateName, templateId, provisioningMode, clientType, isLicenseActive, isLicenseExpired, isLicenseValid, startDateUtc, expirationDateUtc, dateValidity, tokenLimit, floatingTokenLimit, isTemporary, isSoftwareVersionValid, softwareReleaseLimitation, isNewerSoftwareShipmentAvailable, latestSoftwareShipment, sessionPeriod, heartbeatPeriod, freeride, enforceSoftwareVersionUpgrade, features, limitations, variables, constrainedVariables, licenseUsers, createdDateUtc, licenseType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseInfoDto {\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    licenseName: ").append(toIndentedString(licenseName)).append("\n");
    sb.append("    licenseKey: ").append(toIndentedString(licenseKey)).append("\n");
    sb.append("    tokenKey: ").append(toIndentedString(tokenKey)).append("\n");
    sb.append("    legacyLicenseKey: ").append(toIndentedString(legacyLicenseKey)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientDescription: ").append(toIndentedString(clientDescription)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    provisioningMode: ").append(toIndentedString(provisioningMode)).append("\n");
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("    isLicenseActive: ").append(toIndentedString(isLicenseActive)).append("\n");
    sb.append("    isLicenseExpired: ").append(toIndentedString(isLicenseExpired)).append("\n");
    sb.append("    isLicenseValid: ").append(toIndentedString(isLicenseValid)).append("\n");
    sb.append("    startDateUtc: ").append(toIndentedString(startDateUtc)).append("\n");
    sb.append("    expirationDateUtc: ").append(toIndentedString(expirationDateUtc)).append("\n");
    sb.append("    dateValidity: ").append(toIndentedString(dateValidity)).append("\n");
    sb.append("    tokenLimit: ").append(toIndentedString(tokenLimit)).append("\n");
    sb.append("    floatingTokenLimit: ").append(toIndentedString(floatingTokenLimit)).append("\n");
    sb.append("    isTemporary: ").append(toIndentedString(isTemporary)).append("\n");
    sb.append("    isSoftwareVersionValid: ").append(toIndentedString(isSoftwareVersionValid)).append("\n");
    sb.append("    softwareReleaseLimitation: ").append(toIndentedString(softwareReleaseLimitation)).append("\n");
    sb.append("    isNewerSoftwareShipmentAvailable: ").append(toIndentedString(isNewerSoftwareShipmentAvailable)).append("\n");
    sb.append("    latestSoftwareShipment: ").append(toIndentedString(latestSoftwareShipment)).append("\n");
    sb.append("    sessionPeriod: ").append(toIndentedString(sessionPeriod)).append("\n");
    sb.append("    heartbeatPeriod: ").append(toIndentedString(heartbeatPeriod)).append("\n");
    sb.append("    freeride: ").append(toIndentedString(freeride)).append("\n");
    sb.append("    enforceSoftwareVersionUpgrade: ").append(toIndentedString(enforceSoftwareVersionUpgrade)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    limitations: ").append(toIndentedString(limitations)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    constrainedVariables: ").append(toIndentedString(constrainedVariables)).append("\n");
    sb.append("    licenseUsers: ").append(toIndentedString(licenseUsers)).append("\n");
    sb.append("    createdDateUtc: ").append(toIndentedString(createdDateUtc)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("customer", "license_name", "license_key", "token_key", "legacy_license_key", "client_id", "client_description", "product_name", "product_id", "template_name", "template_id", "provisioning_mode", "client_type", "is_license_active", "is_license_expired", "is_license_valid", "start_date_utc", "expiration_date_utc", "date_validity", "token_limit", "floating_token_limit", "is_temporary", "is_software_version_valid", "software_release_limitation", "is_newer_software_shipment_available", "latest_software_shipment", "session_period", "heartbeat_period", "freeride", "enforce_software_version_upgrade", "features", "limitations", "variables", "constrained_variables", "license_users", "created_date_utc", "license_type"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LicenseInfoDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LicenseInfoDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LicenseInfoDto is not found in the empty JSON string", LicenseInfoDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LicenseInfoDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LicenseInfoDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        CustomerAccountDto.validateJsonElement(jsonObj.get("customer"));
      }
      if ((jsonObj.get("license_name") != null && !jsonObj.get("license_name").isJsonNull()) && !jsonObj.get("license_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_name").toString()));
      }
      if ((jsonObj.get("license_key") != null && !jsonObj.get("license_key").isJsonNull()) && !jsonObj.get("license_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_key").toString()));
      }
      if ((jsonObj.get("token_key") != null && !jsonObj.get("token_key").isJsonNull()) && !jsonObj.get("token_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_key").toString()));
      }
      if ((jsonObj.get("legacy_license_key") != null && !jsonObj.get("legacy_license_key").isJsonNull()) && !jsonObj.get("legacy_license_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacy_license_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacy_license_key").toString()));
      }
      if ((jsonObj.get("client_id") != null && !jsonObj.get("client_id").isJsonNull()) && !jsonObj.get("client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_id").toString()));
      }
      if ((jsonObj.get("client_description") != null && !jsonObj.get("client_description").isJsonNull()) && !jsonObj.get("client_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_description").toString()));
      }
      if ((jsonObj.get("product_name") != null && !jsonObj.get("product_name").isJsonNull()) && !jsonObj.get("product_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_name").toString()));
      }
      if ((jsonObj.get("product_id") != null && !jsonObj.get("product_id").isJsonNull()) && !jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if ((jsonObj.get("template_name") != null && !jsonObj.get("template_name").isJsonNull()) && !jsonObj.get("template_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_name").toString()));
      }
      if ((jsonObj.get("template_id") != null && !jsonObj.get("template_id").isJsonNull()) && !jsonObj.get("template_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_id").toString()));
      }
      // validate the optional field `provisioning_mode`
      if (jsonObj.get("provisioning_mode") != null && !jsonObj.get("provisioning_mode").isJsonNull()) {
        ProvisioningMode.validateJsonElement(jsonObj.get("provisioning_mode"));
      }
      // validate the optional field `client_type`
      if (jsonObj.get("client_type") != null && !jsonObj.get("client_type").isJsonNull()) {
        ClientType.validateJsonElement(jsonObj.get("client_type"));
      }
      // validate the optional field `date_validity`
      if (jsonObj.get("date_validity") != null && !jsonObj.get("date_validity").isJsonNull()) {
        DateValidity.validateJsonElement(jsonObj.get("date_validity"));
      }
      // validate the optional field `software_release_limitation`
      if (jsonObj.get("software_release_limitation") != null && !jsonObj.get("software_release_limitation").isJsonNull()) {
        SoftwareReleaseLimitationDto.validateJsonElement(jsonObj.get("software_release_limitation"));
      }
      // validate the optional field `latest_software_shipment`
      if (jsonObj.get("latest_software_shipment") != null && !jsonObj.get("latest_software_shipment").isJsonNull()) {
        SoftwareShipmentDto.validateJsonElement(jsonObj.get("latest_software_shipment"));
      }
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull()) {
        JsonArray jsonArrayfeatures = jsonObj.getAsJsonArray("features");
        if (jsonArrayfeatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("features").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
          }

          // validate the optional field `features` (array)
          for (int i = 0; i < jsonArrayfeatures.size(); i++) {
            ProvisioningFeatureDto.validateJsonElement(jsonArrayfeatures.get(i));
          };
        }
      }
      if (jsonObj.get("limitations") != null && !jsonObj.get("limitations").isJsonNull()) {
        JsonArray jsonArraylimitations = jsonObj.getAsJsonArray("limitations");
        if (jsonArraylimitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("limitations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `limitations` to be an array in the JSON string but got `%s`", jsonObj.get("limitations").toString()));
          }

          // validate the optional field `limitations` (array)
          for (int i = 0; i < jsonArraylimitations.size(); i++) {
            ProvisioningLimitationDto.validateJsonElement(jsonArraylimitations.get(i));
          };
        }
      }
      if (jsonObj.get("variables") != null && !jsonObj.get("variables").isJsonNull()) {
        JsonArray jsonArrayvariables = jsonObj.getAsJsonArray("variables");
        if (jsonArrayvariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `variables` to be an array in the JSON string but got `%s`", jsonObj.get("variables").toString()));
          }

          // validate the optional field `variables` (array)
          for (int i = 0; i < jsonArrayvariables.size(); i++) {
            ProvisioningVariableDto.validateJsonElement(jsonArrayvariables.get(i));
          };
        }
      }
      if (jsonObj.get("constrained_variables") != null && !jsonObj.get("constrained_variables").isJsonNull()) {
        JsonArray jsonArrayconstrainedVariables = jsonObj.getAsJsonArray("constrained_variables");
        if (jsonArrayconstrainedVariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("constrained_variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `constrained_variables` to be an array in the JSON string but got `%s`", jsonObj.get("constrained_variables").toString()));
          }

          // validate the optional field `constrained_variables` (array)
          for (int i = 0; i < jsonArrayconstrainedVariables.size(); i++) {
            ProvisioningConstrainedVariableDto.validateJsonElement(jsonArrayconstrainedVariables.get(i));
          };
        }
      }
      if (jsonObj.get("license_users") != null && !jsonObj.get("license_users").isJsonNull()) {
        JsonArray jsonArraylicenseUsers = jsonObj.getAsJsonArray("license_users");
        if (jsonArraylicenseUsers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_users` to be an array in the JSON string but got `%s`", jsonObj.get("license_users").toString()));
          }

          // validate the optional field `license_users` (array)
          for (int i = 0; i < jsonArraylicenseUsers.size(); i++) {
            LicenseUserDto.validateJsonElement(jsonArraylicenseUsers.get(i));
          };
        }
      }
      // validate the optional field `license_type`
      if (jsonObj.get("license_type") != null && !jsonObj.get("license_type").isJsonNull()) {
        LicenseTypeDto.validateJsonElement(jsonObj.get("license_type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LicenseInfoDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LicenseInfoDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LicenseInfoDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LicenseInfoDto.class));

       return (TypeAdapter<T>) new TypeAdapter<LicenseInfoDto>() {
           @Override
           public void write(JsonWriter out, LicenseInfoDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LicenseInfoDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LicenseInfoDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LicenseInfoDto
   * @throws IOException if the JSON string is invalid with respect to LicenseInfoDto
   */
  public static LicenseInfoDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LicenseInfoDto.class);
  }

  /**
   * Convert an instance of LicenseInfoDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

