/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.CustomerPortalRoleDto;
import com.slascone.model.ResellerPortalRoleDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * IsvUserRolesDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class IsvUserRolesDto {
  public static final String SERIALIZED_NAME_ISV_ID = "isvId";
  @SerializedName(SERIALIZED_NAME_ISV_ID)
  @javax.annotation.Nullable
  private UUID isvId;

  public static final String SERIALIZED_NAME_ISV_NAME = "isvName";
  @SerializedName(SERIALIZED_NAME_ISV_NAME)
  @javax.annotation.Nullable
  private String isvName;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private UUID userId;

  public static final String SERIALIZED_NAME_VENDOR_ROLE_ID = "vendorRoleId";
  @SerializedName(SERIALIZED_NAME_VENDOR_ROLE_ID)
  @javax.annotation.Nullable
  private UUID vendorRoleId;

  public static final String SERIALIZED_NAME_RESELLER_PORTAL_ROLES = "resellerPortalRoles";
  @SerializedName(SERIALIZED_NAME_RESELLER_PORTAL_ROLES)
  @javax.annotation.Nullable
  private List<ResellerPortalRoleDto> resellerPortalRoles;

  public static final String SERIALIZED_NAME_CUSTOMER_PORTAL_ROLES = "customerPortalRoles";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PORTAL_ROLES)
  @javax.annotation.Nullable
  private List<CustomerPortalRoleDto> customerPortalRoles;

  public IsvUserRolesDto() {
  }

  public IsvUserRolesDto isvId(@javax.annotation.Nullable UUID isvId) {
    this.isvId = isvId;
    return this;
  }

  /**
   * Get isvId
   * @return isvId
   */
  @javax.annotation.Nullable
  public UUID getIsvId() {
    return isvId;
  }

  public void setIsvId(@javax.annotation.Nullable UUID isvId) {
    this.isvId = isvId;
  }


  public IsvUserRolesDto isvName(@javax.annotation.Nullable String isvName) {
    this.isvName = isvName;
    return this;
  }

  /**
   * Get isvName
   * @return isvName
   */
  @javax.annotation.Nullable
  public String getIsvName() {
    return isvName;
  }

  public void setIsvName(@javax.annotation.Nullable String isvName) {
    this.isvName = isvName;
  }


  public IsvUserRolesDto userId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
  }


  public IsvUserRolesDto vendorRoleId(@javax.annotation.Nullable UUID vendorRoleId) {
    this.vendorRoleId = vendorRoleId;
    return this;
  }

  /**
   * Get vendorRoleId
   * @return vendorRoleId
   */
  @javax.annotation.Nullable
  public UUID getVendorRoleId() {
    return vendorRoleId;
  }

  public void setVendorRoleId(@javax.annotation.Nullable UUID vendorRoleId) {
    this.vendorRoleId = vendorRoleId;
  }


  public IsvUserRolesDto resellerPortalRoles(@javax.annotation.Nullable List<ResellerPortalRoleDto> resellerPortalRoles) {
    this.resellerPortalRoles = resellerPortalRoles;
    return this;
  }

  public IsvUserRolesDto addResellerPortalRolesItem(ResellerPortalRoleDto resellerPortalRolesItem) {
    if (this.resellerPortalRoles == null) {
      this.resellerPortalRoles = new ArrayList<>();
    }
    this.resellerPortalRoles.add(resellerPortalRolesItem);
    return this;
  }

  /**
   * Get resellerPortalRoles
   * @return resellerPortalRoles
   */
  @javax.annotation.Nullable
  public List<ResellerPortalRoleDto> getResellerPortalRoles() {
    return resellerPortalRoles;
  }

  public void setResellerPortalRoles(@javax.annotation.Nullable List<ResellerPortalRoleDto> resellerPortalRoles) {
    this.resellerPortalRoles = resellerPortalRoles;
  }


  public IsvUserRolesDto customerPortalRoles(@javax.annotation.Nullable List<CustomerPortalRoleDto> customerPortalRoles) {
    this.customerPortalRoles = customerPortalRoles;
    return this;
  }

  public IsvUserRolesDto addCustomerPortalRolesItem(CustomerPortalRoleDto customerPortalRolesItem) {
    if (this.customerPortalRoles == null) {
      this.customerPortalRoles = new ArrayList<>();
    }
    this.customerPortalRoles.add(customerPortalRolesItem);
    return this;
  }

  /**
   * Get customerPortalRoles
   * @return customerPortalRoles
   */
  @javax.annotation.Nullable
  public List<CustomerPortalRoleDto> getCustomerPortalRoles() {
    return customerPortalRoles;
  }

  public void setCustomerPortalRoles(@javax.annotation.Nullable List<CustomerPortalRoleDto> customerPortalRoles) {
    this.customerPortalRoles = customerPortalRoles;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsvUserRolesDto isvUserRolesDto = (IsvUserRolesDto) o;
    return Objects.equals(this.isvId, isvUserRolesDto.isvId) &&
        Objects.equals(this.isvName, isvUserRolesDto.isvName) &&
        Objects.equals(this.userId, isvUserRolesDto.userId) &&
        Objects.equals(this.vendorRoleId, isvUserRolesDto.vendorRoleId) &&
        Objects.equals(this.resellerPortalRoles, isvUserRolesDto.resellerPortalRoles) &&
        Objects.equals(this.customerPortalRoles, isvUserRolesDto.customerPortalRoles);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isvId, isvName, userId, vendorRoleId, resellerPortalRoles, customerPortalRoles);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsvUserRolesDto {\n");
    sb.append("    isvId: ").append(toIndentedString(isvId)).append("\n");
    sb.append("    isvName: ").append(toIndentedString(isvName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    vendorRoleId: ").append(toIndentedString(vendorRoleId)).append("\n");
    sb.append("    resellerPortalRoles: ").append(toIndentedString(resellerPortalRoles)).append("\n");
    sb.append("    customerPortalRoles: ").append(toIndentedString(customerPortalRoles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("isvId", "isvName", "userId", "vendorRoleId", "resellerPortalRoles", "customerPortalRoles"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IsvUserRolesDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IsvUserRolesDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IsvUserRolesDto is not found in the empty JSON string", IsvUserRolesDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IsvUserRolesDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IsvUserRolesDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("isvId") != null && !jsonObj.get("isvId").isJsonNull()) && !jsonObj.get("isvId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isvId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isvId").toString()));
      }
      if ((jsonObj.get("isvName") != null && !jsonObj.get("isvName").isJsonNull()) && !jsonObj.get("isvName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isvName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isvName").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("vendorRoleId") != null && !jsonObj.get("vendorRoleId").isJsonNull()) && !jsonObj.get("vendorRoleId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorRoleId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorRoleId").toString()));
      }
      if (jsonObj.get("resellerPortalRoles") != null && !jsonObj.get("resellerPortalRoles").isJsonNull()) {
        JsonArray jsonArrayresellerPortalRoles = jsonObj.getAsJsonArray("resellerPortalRoles");
        if (jsonArrayresellerPortalRoles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("resellerPortalRoles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resellerPortalRoles` to be an array in the JSON string but got `%s`", jsonObj.get("resellerPortalRoles").toString()));
          }

          // validate the optional field `resellerPortalRoles` (array)
          for (int i = 0; i < jsonArrayresellerPortalRoles.size(); i++) {
            ResellerPortalRoleDto.validateJsonElement(jsonArrayresellerPortalRoles.get(i));
          };
        }
      }
      if (jsonObj.get("customerPortalRoles") != null && !jsonObj.get("customerPortalRoles").isJsonNull()) {
        JsonArray jsonArraycustomerPortalRoles = jsonObj.getAsJsonArray("customerPortalRoles");
        if (jsonArraycustomerPortalRoles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerPortalRoles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerPortalRoles` to be an array in the JSON string but got `%s`", jsonObj.get("customerPortalRoles").toString()));
          }

          // validate the optional field `customerPortalRoles` (array)
          for (int i = 0; i < jsonArraycustomerPortalRoles.size(); i++) {
            CustomerPortalRoleDto.validateJsonElement(jsonArraycustomerPortalRoles.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IsvUserRolesDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IsvUserRolesDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IsvUserRolesDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IsvUserRolesDto.class));

       return (TypeAdapter<T>) new TypeAdapter<IsvUserRolesDto>() {
           @Override
           public void write(JsonWriter out, IsvUserRolesDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IsvUserRolesDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IsvUserRolesDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IsvUserRolesDto
   * @throws IOException if the JSON string is invalid with respect to IsvUserRolesDto
   */
  public static IsvUserRolesDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IsvUserRolesDto.class);
  }

  /**
   * Convert an instance of IsvUserRolesDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

