/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * EmailConfigurationDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class EmailConfigurationDto {
  public static final String SERIALIZED_NAME_INHERIT_FROM_VENDOR = "inherit_from_vendor";
  @SerializedName(SERIALIZED_NAME_INHERIT_FROM_VENDOR)
  @javax.annotation.Nullable
  private Boolean inheritFromVendor;

  public static final String SERIALIZED_NAME_USE_AZURE_COMMUNICATION_SERVICE = "use_azure_communication_service";
  @SerializedName(SERIALIZED_NAME_USE_AZURE_COMMUNICATION_SERVICE)
  @javax.annotation.Nullable
  private Boolean useAzureCommunicationService;

  public static final String SERIALIZED_NAME_FROM_EMAIL = "from_email";
  @SerializedName(SERIALIZED_NAME_FROM_EMAIL)
  @javax.annotation.Nullable
  private String fromEmail;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  @javax.annotation.Nullable
  private String password;

  public static final String SERIALIZED_NAME_TO_EMAIL = "to_email";
  @SerializedName(SERIALIZED_NAME_TO_EMAIL)
  @javax.annotation.Nullable
  private List<String> toEmail;

  public static final String SERIALIZED_NAME_SMTP_CLIENT = "smtp_client";
  @SerializedName(SERIALIZED_NAME_SMTP_CLIENT)
  @javax.annotation.Nullable
  private String smtpClient;

  public static final String SERIALIZED_NAME_SMTP_PORT = "smtp_port";
  @SerializedName(SERIALIZED_NAME_SMTP_PORT)
  @javax.annotation.Nullable
  private Integer smtpPort;

  public static final String SERIALIZED_NAME_ACS_SENDER_DOMAIN = "acs_sender_domain";
  @SerializedName(SERIALIZED_NAME_ACS_SENDER_DOMAIN)
  @javax.annotation.Nullable
  private String acsSenderDomain;

  public static final String SERIALIZED_NAME_ACS_SENDER_USERNAME = "acs_sender_username";
  @SerializedName(SERIALIZED_NAME_ACS_SENDER_USERNAME)
  @javax.annotation.Nullable
  private String acsSenderUsername;

  public static final String SERIALIZED_NAME_CREATED_DATE_UTC = "created_date_utc";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime createdDateUtc;

  public static final String SERIALIZED_NAME_MODIFIED_DATE_UTC = "modified_date_utc";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDateUtc;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  @javax.annotation.Nullable
  private String lastModifiedBy;

  public EmailConfigurationDto() {
  }

  public EmailConfigurationDto inheritFromVendor(@javax.annotation.Nullable Boolean inheritFromVendor) {
    this.inheritFromVendor = inheritFromVendor;
    return this;
  }

  /**
   * Get inheritFromVendor
   * @return inheritFromVendor
   */
  @javax.annotation.Nullable
  public Boolean getInheritFromVendor() {
    return inheritFromVendor;
  }

  public void setInheritFromVendor(@javax.annotation.Nullable Boolean inheritFromVendor) {
    this.inheritFromVendor = inheritFromVendor;
  }


  public EmailConfigurationDto useAzureCommunicationService(@javax.annotation.Nullable Boolean useAzureCommunicationService) {
    this.useAzureCommunicationService = useAzureCommunicationService;
    return this;
  }

  /**
   * Get useAzureCommunicationService
   * @return useAzureCommunicationService
   */
  @javax.annotation.Nullable
  public Boolean getUseAzureCommunicationService() {
    return useAzureCommunicationService;
  }

  public void setUseAzureCommunicationService(@javax.annotation.Nullable Boolean useAzureCommunicationService) {
    this.useAzureCommunicationService = useAzureCommunicationService;
  }


  public EmailConfigurationDto fromEmail(@javax.annotation.Nullable String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

  /**
   * Get fromEmail
   * @return fromEmail
   */
  @javax.annotation.Nullable
  public String getFromEmail() {
    return fromEmail;
  }

  public void setFromEmail(@javax.annotation.Nullable String fromEmail) {
    this.fromEmail = fromEmail;
  }


  public EmailConfigurationDto password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public EmailConfigurationDto toEmail(@javax.annotation.Nullable List<String> toEmail) {
    this.toEmail = toEmail;
    return this;
  }

  public EmailConfigurationDto addToEmailItem(String toEmailItem) {
    if (this.toEmail == null) {
      this.toEmail = new ArrayList<>();
    }
    this.toEmail.add(toEmailItem);
    return this;
  }

  /**
   * Get toEmail
   * @return toEmail
   */
  @javax.annotation.Nullable
  public List<String> getToEmail() {
    return toEmail;
  }

  public void setToEmail(@javax.annotation.Nullable List<String> toEmail) {
    this.toEmail = toEmail;
  }


  public EmailConfigurationDto smtpClient(@javax.annotation.Nullable String smtpClient) {
    this.smtpClient = smtpClient;
    return this;
  }

  /**
   * Get smtpClient
   * @return smtpClient
   */
  @javax.annotation.Nullable
  public String getSmtpClient() {
    return smtpClient;
  }

  public void setSmtpClient(@javax.annotation.Nullable String smtpClient) {
    this.smtpClient = smtpClient;
  }


  public EmailConfigurationDto smtpPort(@javax.annotation.Nullable Integer smtpPort) {
    this.smtpPort = smtpPort;
    return this;
  }

  /**
   * Get smtpPort
   * @return smtpPort
   */
  @javax.annotation.Nullable
  public Integer getSmtpPort() {
    return smtpPort;
  }

  public void setSmtpPort(@javax.annotation.Nullable Integer smtpPort) {
    this.smtpPort = smtpPort;
  }


  public EmailConfigurationDto acsSenderDomain(@javax.annotation.Nullable String acsSenderDomain) {
    this.acsSenderDomain = acsSenderDomain;
    return this;
  }

  /**
   * Get acsSenderDomain
   * @return acsSenderDomain
   */
  @javax.annotation.Nullable
  public String getAcsSenderDomain() {
    return acsSenderDomain;
  }

  public void setAcsSenderDomain(@javax.annotation.Nullable String acsSenderDomain) {
    this.acsSenderDomain = acsSenderDomain;
  }


  public EmailConfigurationDto acsSenderUsername(@javax.annotation.Nullable String acsSenderUsername) {
    this.acsSenderUsername = acsSenderUsername;
    return this;
  }

  /**
   * Get acsSenderUsername
   * @return acsSenderUsername
   */
  @javax.annotation.Nullable
  public String getAcsSenderUsername() {
    return acsSenderUsername;
  }

  public void setAcsSenderUsername(@javax.annotation.Nullable String acsSenderUsername) {
    this.acsSenderUsername = acsSenderUsername;
  }


  public EmailConfigurationDto createdDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
    return this;
  }

  /**
   * Get createdDateUtc
   * @return createdDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateUtc() {
    return createdDateUtc;
  }

  public void setCreatedDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
  }


  public EmailConfigurationDto modifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
    return this;
  }

  /**
   * Get modifiedDateUtc
   * @return modifiedDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDateUtc() {
    return modifiedDateUtc;
  }

  public void setModifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
  }


  public EmailConfigurationDto lastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailConfigurationDto emailConfigurationDto = (EmailConfigurationDto) o;
    return Objects.equals(this.inheritFromVendor, emailConfigurationDto.inheritFromVendor) &&
        Objects.equals(this.useAzureCommunicationService, emailConfigurationDto.useAzureCommunicationService) &&
        Objects.equals(this.fromEmail, emailConfigurationDto.fromEmail) &&
        Objects.equals(this.password, emailConfigurationDto.password) &&
        Objects.equals(this.toEmail, emailConfigurationDto.toEmail) &&
        Objects.equals(this.smtpClient, emailConfigurationDto.smtpClient) &&
        Objects.equals(this.smtpPort, emailConfigurationDto.smtpPort) &&
        Objects.equals(this.acsSenderDomain, emailConfigurationDto.acsSenderDomain) &&
        Objects.equals(this.acsSenderUsername, emailConfigurationDto.acsSenderUsername) &&
        Objects.equals(this.createdDateUtc, emailConfigurationDto.createdDateUtc) &&
        Objects.equals(this.modifiedDateUtc, emailConfigurationDto.modifiedDateUtc) &&
        Objects.equals(this.lastModifiedBy, emailConfigurationDto.lastModifiedBy);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(inheritFromVendor, useAzureCommunicationService, fromEmail, password, toEmail, smtpClient, smtpPort, acsSenderDomain, acsSenderUsername, createdDateUtc, modifiedDateUtc, lastModifiedBy);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailConfigurationDto {\n");
    sb.append("    inheritFromVendor: ").append(toIndentedString(inheritFromVendor)).append("\n");
    sb.append("    useAzureCommunicationService: ").append(toIndentedString(useAzureCommunicationService)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    toEmail: ").append(toIndentedString(toEmail)).append("\n");
    sb.append("    smtpClient: ").append(toIndentedString(smtpClient)).append("\n");
    sb.append("    smtpPort: ").append(toIndentedString(smtpPort)).append("\n");
    sb.append("    acsSenderDomain: ").append(toIndentedString(acsSenderDomain)).append("\n");
    sb.append("    acsSenderUsername: ").append(toIndentedString(acsSenderUsername)).append("\n");
    sb.append("    createdDateUtc: ").append(toIndentedString(createdDateUtc)).append("\n");
    sb.append("    modifiedDateUtc: ").append(toIndentedString(modifiedDateUtc)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("inherit_from_vendor", "use_azure_communication_service", "from_email", "password", "to_email", "smtp_client", "smtp_port", "acs_sender_domain", "acs_sender_username", "created_date_utc", "modified_date_utc", "last_modified_by"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EmailConfigurationDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EmailConfigurationDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmailConfigurationDto is not found in the empty JSON string", EmailConfigurationDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EmailConfigurationDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EmailConfigurationDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("from_email") != null && !jsonObj.get("from_email").isJsonNull()) && !jsonObj.get("from_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_email").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("to_email") != null && !jsonObj.get("to_email").isJsonNull() && !jsonObj.get("to_email").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_email` to be an array in the JSON string but got `%s`", jsonObj.get("to_email").toString()));
      }
      if ((jsonObj.get("smtp_client") != null && !jsonObj.get("smtp_client").isJsonNull()) && !jsonObj.get("smtp_client").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smtp_client` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smtp_client").toString()));
      }
      if ((jsonObj.get("acs_sender_domain") != null && !jsonObj.get("acs_sender_domain").isJsonNull()) && !jsonObj.get("acs_sender_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_sender_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_sender_domain").toString()));
      }
      if ((jsonObj.get("acs_sender_username") != null && !jsonObj.get("acs_sender_username").isJsonNull()) && !jsonObj.get("acs_sender_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_sender_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_sender_username").toString()));
      }
      if ((jsonObj.get("last_modified_by") != null && !jsonObj.get("last_modified_by").isJsonNull()) && !jsonObj.get("last_modified_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_by").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmailConfigurationDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmailConfigurationDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmailConfigurationDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmailConfigurationDto.class));

       return (TypeAdapter<T>) new TypeAdapter<EmailConfigurationDto>() {
           @Override
           public void write(JsonWriter out, EmailConfigurationDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EmailConfigurationDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EmailConfigurationDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EmailConfigurationDto
   * @throws IOException if the JSON string is invalid with respect to EmailConfigurationDto
   */
  public static EmailConfigurationDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmailConfigurationDto.class);
  }

  /**
   * Convert an instance of EmailConfigurationDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

