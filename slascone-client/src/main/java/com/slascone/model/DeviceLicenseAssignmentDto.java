/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.DeviceAnalyticalHeartbeatDto;
import com.slascone.model.DeviceHeartbeatDto;
import com.slascone.model.LicenseActivationType;
import com.slascone.model.TagAssignmentDto;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * DeviceLicenseAssignmentDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class DeviceLicenseAssignmentDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private UUID id;

  public static final String SERIALIZED_NAME_LICENSE_ID = "license_id";
  @SerializedName(SERIALIZED_NAME_LICENSE_ID)
  @javax.annotation.Nullable
  private UUID licenseId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nullable
  private UUID productId;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "device_name";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  @javax.annotation.Nullable
  private String deviceName;

  public static final String SERIALIZED_NAME_DEVICE_DESCRIPTION = "device_description";
  @SerializedName(SERIALIZED_NAME_DEVICE_DESCRIPTION)
  @javax.annotation.Nullable
  private String deviceDescription;

  public static final String SERIALIZED_NAME_TOKEN_KEY = "token_key";
  @SerializedName(SERIALIZED_NAME_TOKEN_KEY)
  @javax.annotation.Nullable
  private UUID tokenKey;

  public static final String SERIALIZED_NAME_USER_EMAIL = "user_email";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  @javax.annotation.Nullable
  private String userEmail;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private UUID userId;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private String clientId;

  public static final String SERIALIZED_NAME_ACTIVATED = "activated";
  @SerializedName(SERIALIZED_NAME_ACTIVATED)
  @javax.annotation.Nullable
  private Boolean activated;

  public static final String SERIALIZED_NAME_IS_SOFTWARE_VERSION_VALID = "is_software_version_valid";
  @SerializedName(SERIALIZED_NAME_IS_SOFTWARE_VERSION_VALID)
  @javax.annotation.Nullable
  private Boolean isSoftwareVersionValid;

  public static final String SERIALIZED_NAME_IS_GOODWILL_LICENSE = "is_goodwill_license";
  @SerializedName(SERIALIZED_NAME_IS_GOODWILL_LICENSE)
  @javax.annotation.Nullable
  private Boolean isGoodwillLicense;

  public static final String SERIALIZED_NAME_HAS_HEARTBEATS = "has_heartbeats";
  @SerializedName(SERIALIZED_NAME_HAS_HEARTBEATS)
  @javax.annotation.Nullable
  private Boolean hasHeartbeats;

  public static final String SERIALIZED_NAME_HAS_CONSUMPTION_HEARTBEATS = "has_consumption_heartbeats";
  @SerializedName(SERIALIZED_NAME_HAS_CONSUMPTION_HEARTBEATS)
  @javax.annotation.Nullable
  private Boolean hasConsumptionHeartbeats;

  public static final String SERIALIZED_NAME_ACTIVATED_DATE_UTC = "activated_date_utc";
  @SerializedName(SERIALIZED_NAME_ACTIVATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime activatedDateUtc;

  public static final String SERIALIZED_NAME_HEARTBEAT_INFO = "heartbeat_info";
  @SerializedName(SERIALIZED_NAME_HEARTBEAT_INFO)
  @javax.annotation.Nullable
  private DeviceHeartbeatDto heartbeatInfo;

  public static final String SERIALIZED_NAME_ENFORCE_SOFTWARE_VERSION_UPGRADE = "enforce_software_version_upgrade";
  @SerializedName(SERIALIZED_NAME_ENFORCE_SOFTWARE_VERSION_UPGRADE)
  @javax.annotation.Nullable
  private Boolean enforceSoftwareVersionUpgrade;

  public static final String SERIALIZED_NAME_DEVICE_ANALYTICAL_HEARTBEATS = "device_analytical_heartbeats";
  @SerializedName(SERIALIZED_NAME_DEVICE_ANALYTICAL_HEARTBEATS)
  @javax.annotation.Nullable
  private List<DeviceAnalyticalHeartbeatDto> deviceAnalyticalHeartbeats;

  public static final String SERIALIZED_NAME_SOFTWARE_VERSION = "software_version";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_VERSION)
  @javax.annotation.Nullable
  private String softwareVersion;

  public static final String SERIALIZED_NAME_OPERATING_SYSTEM = "operating_system";
  @SerializedName(SERIALIZED_NAME_OPERATING_SYSTEM)
  @javax.annotation.Nullable
  private String operatingSystem;

  public static final String SERIALIZED_NAME_TAG_ASSIGNMENTS = "tag_assignments";
  @SerializedName(SERIALIZED_NAME_TAG_ASSIGNMENTS)
  @javax.annotation.Nullable
  private List<TagAssignmentDto> tagAssignments;

  public static final String SERIALIZED_NAME_LICENSE_ACTIVATION_TYPE = "license_activation_type";
  @SerializedName(SERIALIZED_NAME_LICENSE_ACTIVATION_TYPE)
  @javax.annotation.Nullable
  private LicenseActivationType licenseActivationType;

  public static final String SERIALIZED_NAME_CREATED_DATE_UTC = "created_date_utc";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime createdDateUtc;

  public static final String SERIALIZED_NAME_MODIFIED_DATE_UTC = "modified_date_utc";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDateUtc;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  @javax.annotation.Nullable
  private String lastModifiedBy;

  public DeviceLicenseAssignmentDto() {
  }

  public DeviceLicenseAssignmentDto id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public DeviceLicenseAssignmentDto licenseId(@javax.annotation.Nullable UUID licenseId) {
    this.licenseId = licenseId;
    return this;
  }

  /**
   * Get licenseId
   * @return licenseId
   */
  @javax.annotation.Nullable
  public UUID getLicenseId() {
    return licenseId;
  }

  public void setLicenseId(@javax.annotation.Nullable UUID licenseId) {
    this.licenseId = licenseId;
  }


  public DeviceLicenseAssignmentDto productId(@javax.annotation.Nullable UUID productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public UUID getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nullable UUID productId) {
    this.productId = productId;
  }


  public DeviceLicenseAssignmentDto deviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

  /**
   * Get deviceName
   * @return deviceName
   */
  @javax.annotation.Nullable
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(@javax.annotation.Nullable String deviceName) {
    this.deviceName = deviceName;
  }


  public DeviceLicenseAssignmentDto deviceDescription(@javax.annotation.Nullable String deviceDescription) {
    this.deviceDescription = deviceDescription;
    return this;
  }

  /**
   * Get deviceDescription
   * @return deviceDescription
   */
  @javax.annotation.Nullable
  public String getDeviceDescription() {
    return deviceDescription;
  }

  public void setDeviceDescription(@javax.annotation.Nullable String deviceDescription) {
    this.deviceDescription = deviceDescription;
  }


  public DeviceLicenseAssignmentDto tokenKey(@javax.annotation.Nullable UUID tokenKey) {
    this.tokenKey = tokenKey;
    return this;
  }

  /**
   * Get tokenKey
   * @return tokenKey
   */
  @javax.annotation.Nullable
  public UUID getTokenKey() {
    return tokenKey;
  }

  public void setTokenKey(@javax.annotation.Nullable UUID tokenKey) {
    this.tokenKey = tokenKey;
  }


  public DeviceLicenseAssignmentDto userEmail(@javax.annotation.Nullable String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * Get userEmail
   * @return userEmail
   */
  @javax.annotation.Nullable
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(@javax.annotation.Nullable String userEmail) {
    this.userEmail = userEmail;
  }


  public DeviceLicenseAssignmentDto userId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable UUID userId) {
    this.userId = userId;
  }


  public DeviceLicenseAssignmentDto clientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }


  public DeviceLicenseAssignmentDto activated(@javax.annotation.Nullable Boolean activated) {
    this.activated = activated;
    return this;
  }

  /**
   * Get activated
   * @return activated
   */
  @javax.annotation.Nullable
  public Boolean getActivated() {
    return activated;
  }

  public void setActivated(@javax.annotation.Nullable Boolean activated) {
    this.activated = activated;
  }


  public DeviceLicenseAssignmentDto isSoftwareVersionValid(@javax.annotation.Nullable Boolean isSoftwareVersionValid) {
    this.isSoftwareVersionValid = isSoftwareVersionValid;
    return this;
  }

  /**
   * Get isSoftwareVersionValid
   * @return isSoftwareVersionValid
   */
  @javax.annotation.Nullable
  public Boolean getIsSoftwareVersionValid() {
    return isSoftwareVersionValid;
  }

  public void setIsSoftwareVersionValid(@javax.annotation.Nullable Boolean isSoftwareVersionValid) {
    this.isSoftwareVersionValid = isSoftwareVersionValid;
  }


  public DeviceLicenseAssignmentDto isGoodwillLicense(@javax.annotation.Nullable Boolean isGoodwillLicense) {
    this.isGoodwillLicense = isGoodwillLicense;
    return this;
  }

  /**
   * Get isGoodwillLicense
   * @return isGoodwillLicense
   */
  @javax.annotation.Nullable
  public Boolean getIsGoodwillLicense() {
    return isGoodwillLicense;
  }

  public void setIsGoodwillLicense(@javax.annotation.Nullable Boolean isGoodwillLicense) {
    this.isGoodwillLicense = isGoodwillLicense;
  }


  public DeviceLicenseAssignmentDto hasHeartbeats(@javax.annotation.Nullable Boolean hasHeartbeats) {
    this.hasHeartbeats = hasHeartbeats;
    return this;
  }

  /**
   * Get hasHeartbeats
   * @return hasHeartbeats
   */
  @javax.annotation.Nullable
  public Boolean getHasHeartbeats() {
    return hasHeartbeats;
  }

  public void setHasHeartbeats(@javax.annotation.Nullable Boolean hasHeartbeats) {
    this.hasHeartbeats = hasHeartbeats;
  }


  public DeviceLicenseAssignmentDto hasConsumptionHeartbeats(@javax.annotation.Nullable Boolean hasConsumptionHeartbeats) {
    this.hasConsumptionHeartbeats = hasConsumptionHeartbeats;
    return this;
  }

  /**
   * Get hasConsumptionHeartbeats
   * @return hasConsumptionHeartbeats
   */
  @javax.annotation.Nullable
  public Boolean getHasConsumptionHeartbeats() {
    return hasConsumptionHeartbeats;
  }

  public void setHasConsumptionHeartbeats(@javax.annotation.Nullable Boolean hasConsumptionHeartbeats) {
    this.hasConsumptionHeartbeats = hasConsumptionHeartbeats;
  }


  public DeviceLicenseAssignmentDto activatedDateUtc(@javax.annotation.Nullable OffsetDateTime activatedDateUtc) {
    this.activatedDateUtc = activatedDateUtc;
    return this;
  }

  /**
   * Get activatedDateUtc
   * @return activatedDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getActivatedDateUtc() {
    return activatedDateUtc;
  }

  public void setActivatedDateUtc(@javax.annotation.Nullable OffsetDateTime activatedDateUtc) {
    this.activatedDateUtc = activatedDateUtc;
  }


  public DeviceLicenseAssignmentDto heartbeatInfo(@javax.annotation.Nullable DeviceHeartbeatDto heartbeatInfo) {
    this.heartbeatInfo = heartbeatInfo;
    return this;
  }

  /**
   * Get heartbeatInfo
   * @return heartbeatInfo
   */
  @javax.annotation.Nullable
  public DeviceHeartbeatDto getHeartbeatInfo() {
    return heartbeatInfo;
  }

  public void setHeartbeatInfo(@javax.annotation.Nullable DeviceHeartbeatDto heartbeatInfo) {
    this.heartbeatInfo = heartbeatInfo;
  }


  public DeviceLicenseAssignmentDto enforceSoftwareVersionUpgrade(@javax.annotation.Nullable Boolean enforceSoftwareVersionUpgrade) {
    this.enforceSoftwareVersionUpgrade = enforceSoftwareVersionUpgrade;
    return this;
  }

  /**
   * Get enforceSoftwareVersionUpgrade
   * @return enforceSoftwareVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getEnforceSoftwareVersionUpgrade() {
    return enforceSoftwareVersionUpgrade;
  }

  public void setEnforceSoftwareVersionUpgrade(@javax.annotation.Nullable Boolean enforceSoftwareVersionUpgrade) {
    this.enforceSoftwareVersionUpgrade = enforceSoftwareVersionUpgrade;
  }


  public DeviceLicenseAssignmentDto deviceAnalyticalHeartbeats(@javax.annotation.Nullable List<DeviceAnalyticalHeartbeatDto> deviceAnalyticalHeartbeats) {
    this.deviceAnalyticalHeartbeats = deviceAnalyticalHeartbeats;
    return this;
  }

  public DeviceLicenseAssignmentDto addDeviceAnalyticalHeartbeatsItem(DeviceAnalyticalHeartbeatDto deviceAnalyticalHeartbeatsItem) {
    if (this.deviceAnalyticalHeartbeats == null) {
      this.deviceAnalyticalHeartbeats = new ArrayList<>();
    }
    this.deviceAnalyticalHeartbeats.add(deviceAnalyticalHeartbeatsItem);
    return this;
  }

  /**
   * Get deviceAnalyticalHeartbeats
   * @return deviceAnalyticalHeartbeats
   */
  @javax.annotation.Nullable
  public List<DeviceAnalyticalHeartbeatDto> getDeviceAnalyticalHeartbeats() {
    return deviceAnalyticalHeartbeats;
  }

  public void setDeviceAnalyticalHeartbeats(@javax.annotation.Nullable List<DeviceAnalyticalHeartbeatDto> deviceAnalyticalHeartbeats) {
    this.deviceAnalyticalHeartbeats = deviceAnalyticalHeartbeats;
  }


  public DeviceLicenseAssignmentDto softwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

  /**
   * Get softwareVersion
   * @return softwareVersion
   */
  @javax.annotation.Nullable
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(@javax.annotation.Nullable String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  public DeviceLicenseAssignmentDto operatingSystem(@javax.annotation.Nullable String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

  /**
   * Get operatingSystem
   * @return operatingSystem
   */
  @javax.annotation.Nullable
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(@javax.annotation.Nullable String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  public DeviceLicenseAssignmentDto tagAssignments(@javax.annotation.Nullable List<TagAssignmentDto> tagAssignments) {
    this.tagAssignments = tagAssignments;
    return this;
  }

  public DeviceLicenseAssignmentDto addTagAssignmentsItem(TagAssignmentDto tagAssignmentsItem) {
    if (this.tagAssignments == null) {
      this.tagAssignments = new ArrayList<>();
    }
    this.tagAssignments.add(tagAssignmentsItem);
    return this;
  }

  /**
   * Get tagAssignments
   * @return tagAssignments
   */
  @javax.annotation.Nullable
  public List<TagAssignmentDto> getTagAssignments() {
    return tagAssignments;
  }

  public void setTagAssignments(@javax.annotation.Nullable List<TagAssignmentDto> tagAssignments) {
    this.tagAssignments = tagAssignments;
  }


  public DeviceLicenseAssignmentDto licenseActivationType(@javax.annotation.Nullable LicenseActivationType licenseActivationType) {
    this.licenseActivationType = licenseActivationType;
    return this;
  }

  /**
   * Get licenseActivationType
   * @return licenseActivationType
   */
  @javax.annotation.Nullable
  public LicenseActivationType getLicenseActivationType() {
    return licenseActivationType;
  }

  public void setLicenseActivationType(@javax.annotation.Nullable LicenseActivationType licenseActivationType) {
    this.licenseActivationType = licenseActivationType;
  }


  public DeviceLicenseAssignmentDto createdDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
    return this;
  }

  /**
   * Get createdDateUtc
   * @return createdDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateUtc() {
    return createdDateUtc;
  }

  public void setCreatedDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
  }


  public DeviceLicenseAssignmentDto modifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
    return this;
  }

  /**
   * Get modifiedDateUtc
   * @return modifiedDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDateUtc() {
    return modifiedDateUtc;
  }

  public void setModifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
  }


  public DeviceLicenseAssignmentDto lastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceLicenseAssignmentDto deviceLicenseAssignmentDto = (DeviceLicenseAssignmentDto) o;
    return Objects.equals(this.id, deviceLicenseAssignmentDto.id) &&
        Objects.equals(this.licenseId, deviceLicenseAssignmentDto.licenseId) &&
        Objects.equals(this.productId, deviceLicenseAssignmentDto.productId) &&
        Objects.equals(this.deviceName, deviceLicenseAssignmentDto.deviceName) &&
        Objects.equals(this.deviceDescription, deviceLicenseAssignmentDto.deviceDescription) &&
        Objects.equals(this.tokenKey, deviceLicenseAssignmentDto.tokenKey) &&
        Objects.equals(this.userEmail, deviceLicenseAssignmentDto.userEmail) &&
        Objects.equals(this.userId, deviceLicenseAssignmentDto.userId) &&
        Objects.equals(this.clientId, deviceLicenseAssignmentDto.clientId) &&
        Objects.equals(this.activated, deviceLicenseAssignmentDto.activated) &&
        Objects.equals(this.isSoftwareVersionValid, deviceLicenseAssignmentDto.isSoftwareVersionValid) &&
        Objects.equals(this.isGoodwillLicense, deviceLicenseAssignmentDto.isGoodwillLicense) &&
        Objects.equals(this.hasHeartbeats, deviceLicenseAssignmentDto.hasHeartbeats) &&
        Objects.equals(this.hasConsumptionHeartbeats, deviceLicenseAssignmentDto.hasConsumptionHeartbeats) &&
        Objects.equals(this.activatedDateUtc, deviceLicenseAssignmentDto.activatedDateUtc) &&
        Objects.equals(this.heartbeatInfo, deviceLicenseAssignmentDto.heartbeatInfo) &&
        Objects.equals(this.enforceSoftwareVersionUpgrade, deviceLicenseAssignmentDto.enforceSoftwareVersionUpgrade) &&
        Objects.equals(this.deviceAnalyticalHeartbeats, deviceLicenseAssignmentDto.deviceAnalyticalHeartbeats) &&
        Objects.equals(this.softwareVersion, deviceLicenseAssignmentDto.softwareVersion) &&
        Objects.equals(this.operatingSystem, deviceLicenseAssignmentDto.operatingSystem) &&
        Objects.equals(this.tagAssignments, deviceLicenseAssignmentDto.tagAssignments) &&
        Objects.equals(this.licenseActivationType, deviceLicenseAssignmentDto.licenseActivationType) &&
        Objects.equals(this.createdDateUtc, deviceLicenseAssignmentDto.createdDateUtc) &&
        Objects.equals(this.modifiedDateUtc, deviceLicenseAssignmentDto.modifiedDateUtc) &&
        Objects.equals(this.lastModifiedBy, deviceLicenseAssignmentDto.lastModifiedBy);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, licenseId, productId, deviceName, deviceDescription, tokenKey, userEmail, userId, clientId, activated, isSoftwareVersionValid, isGoodwillLicense, hasHeartbeats, hasConsumptionHeartbeats, activatedDateUtc, heartbeatInfo, enforceSoftwareVersionUpgrade, deviceAnalyticalHeartbeats, softwareVersion, operatingSystem, tagAssignments, licenseActivationType, createdDateUtc, modifiedDateUtc, lastModifiedBy);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceLicenseAssignmentDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceDescription: ").append(toIndentedString(deviceDescription)).append("\n");
    sb.append("    tokenKey: ").append(toIndentedString(tokenKey)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    activated: ").append(toIndentedString(activated)).append("\n");
    sb.append("    isSoftwareVersionValid: ").append(toIndentedString(isSoftwareVersionValid)).append("\n");
    sb.append("    isGoodwillLicense: ").append(toIndentedString(isGoodwillLicense)).append("\n");
    sb.append("    hasHeartbeats: ").append(toIndentedString(hasHeartbeats)).append("\n");
    sb.append("    hasConsumptionHeartbeats: ").append(toIndentedString(hasConsumptionHeartbeats)).append("\n");
    sb.append("    activatedDateUtc: ").append(toIndentedString(activatedDateUtc)).append("\n");
    sb.append("    heartbeatInfo: ").append(toIndentedString(heartbeatInfo)).append("\n");
    sb.append("    enforceSoftwareVersionUpgrade: ").append(toIndentedString(enforceSoftwareVersionUpgrade)).append("\n");
    sb.append("    deviceAnalyticalHeartbeats: ").append(toIndentedString(deviceAnalyticalHeartbeats)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    tagAssignments: ").append(toIndentedString(tagAssignments)).append("\n");
    sb.append("    licenseActivationType: ").append(toIndentedString(licenseActivationType)).append("\n");
    sb.append("    createdDateUtc: ").append(toIndentedString(createdDateUtc)).append("\n");
    sb.append("    modifiedDateUtc: ").append(toIndentedString(modifiedDateUtc)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("id", "license_id", "product_id", "device_name", "device_description", "token_key", "user_email", "user_id", "client_id", "activated", "is_software_version_valid", "is_goodwill_license", "has_heartbeats", "has_consumption_heartbeats", "activated_date_utc", "heartbeat_info", "enforce_software_version_upgrade", "device_analytical_heartbeats", "software_version", "operating_system", "tag_assignments", "license_activation_type", "created_date_utc", "modified_date_utc", "last_modified_by"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeviceLicenseAssignmentDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeviceLicenseAssignmentDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeviceLicenseAssignmentDto is not found in the empty JSON string", DeviceLicenseAssignmentDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeviceLicenseAssignmentDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeviceLicenseAssignmentDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("license_id") != null && !jsonObj.get("license_id").isJsonNull()) && !jsonObj.get("license_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_id").toString()));
      }
      if ((jsonObj.get("product_id") != null && !jsonObj.get("product_id").isJsonNull()) && !jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if ((jsonObj.get("device_name") != null && !jsonObj.get("device_name").isJsonNull()) && !jsonObj.get("device_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_name").toString()));
      }
      if ((jsonObj.get("device_description") != null && !jsonObj.get("device_description").isJsonNull()) && !jsonObj.get("device_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_description").toString()));
      }
      if ((jsonObj.get("token_key") != null && !jsonObj.get("token_key").isJsonNull()) && !jsonObj.get("token_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token_key").toString()));
      }
      if ((jsonObj.get("user_email") != null && !jsonObj.get("user_email").isJsonNull()) && !jsonObj.get("user_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_email").toString()));
      }
      if ((jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
      if ((jsonObj.get("client_id") != null && !jsonObj.get("client_id").isJsonNull()) && !jsonObj.get("client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_id").toString()));
      }
      // validate the optional field `heartbeat_info`
      if (jsonObj.get("heartbeat_info") != null && !jsonObj.get("heartbeat_info").isJsonNull()) {
        DeviceHeartbeatDto.validateJsonElement(jsonObj.get("heartbeat_info"));
      }
      if (jsonObj.get("device_analytical_heartbeats") != null && !jsonObj.get("device_analytical_heartbeats").isJsonNull()) {
        JsonArray jsonArraydeviceAnalyticalHeartbeats = jsonObj.getAsJsonArray("device_analytical_heartbeats");
        if (jsonArraydeviceAnalyticalHeartbeats != null) {
          // ensure the json data is an array
          if (!jsonObj.get("device_analytical_heartbeats").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `device_analytical_heartbeats` to be an array in the JSON string but got `%s`", jsonObj.get("device_analytical_heartbeats").toString()));
          }

          // validate the optional field `device_analytical_heartbeats` (array)
          for (int i = 0; i < jsonArraydeviceAnalyticalHeartbeats.size(); i++) {
            DeviceAnalyticalHeartbeatDto.validateJsonElement(jsonArraydeviceAnalyticalHeartbeats.get(i));
          };
        }
      }
      if ((jsonObj.get("software_version") != null && !jsonObj.get("software_version").isJsonNull()) && !jsonObj.get("software_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `software_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("software_version").toString()));
      }
      if ((jsonObj.get("operating_system") != null && !jsonObj.get("operating_system").isJsonNull()) && !jsonObj.get("operating_system").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operating_system` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operating_system").toString()));
      }
      if (jsonObj.get("tag_assignments") != null && !jsonObj.get("tag_assignments").isJsonNull()) {
        JsonArray jsonArraytagAssignments = jsonObj.getAsJsonArray("tag_assignments");
        if (jsonArraytagAssignments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tag_assignments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tag_assignments` to be an array in the JSON string but got `%s`", jsonObj.get("tag_assignments").toString()));
          }

          // validate the optional field `tag_assignments` (array)
          for (int i = 0; i < jsonArraytagAssignments.size(); i++) {
            TagAssignmentDto.validateJsonElement(jsonArraytagAssignments.get(i));
          };
        }
      }
      // validate the optional field `license_activation_type`
      if (jsonObj.get("license_activation_type") != null && !jsonObj.get("license_activation_type").isJsonNull()) {
        LicenseActivationType.validateJsonElement(jsonObj.get("license_activation_type"));
      }
      if ((jsonObj.get("last_modified_by") != null && !jsonObj.get("last_modified_by").isJsonNull()) && !jsonObj.get("last_modified_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_by").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeviceLicenseAssignmentDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeviceLicenseAssignmentDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeviceLicenseAssignmentDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeviceLicenseAssignmentDto.class));

       return (TypeAdapter<T>) new TypeAdapter<DeviceLicenseAssignmentDto>() {
           @Override
           public void write(JsonWriter out, DeviceLicenseAssignmentDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeviceLicenseAssignmentDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeviceLicenseAssignmentDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeviceLicenseAssignmentDto
   * @throws IOException if the JSON string is invalid with respect to DeviceLicenseAssignmentDto
   */
  public static DeviceLicenseAssignmentDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeviceLicenseAssignmentDto.class);
  }

  /**
   * Convert an instance of DeviceLicenseAssignmentDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

