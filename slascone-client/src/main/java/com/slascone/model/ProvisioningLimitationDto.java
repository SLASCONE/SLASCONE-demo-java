/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.ConsumptionResetPeriod;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * ProvisioningLimitationDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class ProvisioningLimitationDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private UUID id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  @javax.annotation.Nullable
  private Integer value;

  public static final String SERIALIZED_NAME_REMAINING = "remaining";
  @SerializedName(SERIALIZED_NAME_REMAINING)
  @javax.annotation.Nullable
  private BigDecimal remaining;

  public static final String SERIALIZED_NAME_CONSUMPTION_RESET_MODE = "consumption_reset_mode";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_RESET_MODE)
  @javax.annotation.Nullable
  private ConsumptionResetPeriod consumptionResetMode;

  public static final String SERIALIZED_NAME_CONSUMPTION_RESET_PERIOD_DAYS = "consumption_reset_period_days";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_RESET_PERIOD_DAYS)
  @javax.annotation.Nullable
  private Integer consumptionResetPeriodDays;

  public ProvisioningLimitationDto() {
  }

  public ProvisioningLimitationDto id(@javax.annotation.Nullable UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable UUID id) {
    this.id = id;
  }


  public ProvisioningLimitationDto name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ProvisioningLimitationDto description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public ProvisioningLimitationDto value(@javax.annotation.Nullable Integer value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public Integer getValue() {
    return value;
  }

  public void setValue(@javax.annotation.Nullable Integer value) {
    this.value = value;
  }


  public ProvisioningLimitationDto remaining(@javax.annotation.Nullable BigDecimal remaining) {
    this.remaining = remaining;
    return this;
  }

  /**
   * Get remaining
   * @return remaining
   */
  @javax.annotation.Nullable
  public BigDecimal getRemaining() {
    return remaining;
  }

  public void setRemaining(@javax.annotation.Nullable BigDecimal remaining) {
    this.remaining = remaining;
  }


  public ProvisioningLimitationDto consumptionResetMode(@javax.annotation.Nullable ConsumptionResetPeriod consumptionResetMode) {
    this.consumptionResetMode = consumptionResetMode;
    return this;
  }

  /**
   * Get consumptionResetMode
   * @return consumptionResetMode
   */
  @javax.annotation.Nullable
  public ConsumptionResetPeriod getConsumptionResetMode() {
    return consumptionResetMode;
  }

  public void setConsumptionResetMode(@javax.annotation.Nullable ConsumptionResetPeriod consumptionResetMode) {
    this.consumptionResetMode = consumptionResetMode;
  }


  public ProvisioningLimitationDto consumptionResetPeriodDays(@javax.annotation.Nullable Integer consumptionResetPeriodDays) {
    this.consumptionResetPeriodDays = consumptionResetPeriodDays;
    return this;
  }

  /**
   * Get consumptionResetPeriodDays
   * @return consumptionResetPeriodDays
   */
  @javax.annotation.Nullable
  public Integer getConsumptionResetPeriodDays() {
    return consumptionResetPeriodDays;
  }

  public void setConsumptionResetPeriodDays(@javax.annotation.Nullable Integer consumptionResetPeriodDays) {
    this.consumptionResetPeriodDays = consumptionResetPeriodDays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvisioningLimitationDto provisioningLimitationDto = (ProvisioningLimitationDto) o;
    return Objects.equals(this.id, provisioningLimitationDto.id) &&
        Objects.equals(this.name, provisioningLimitationDto.name) &&
        Objects.equals(this.description, provisioningLimitationDto.description) &&
        Objects.equals(this.value, provisioningLimitationDto.value) &&
        Objects.equals(this.remaining, provisioningLimitationDto.remaining) &&
        Objects.equals(this.consumptionResetMode, provisioningLimitationDto.consumptionResetMode) &&
        Objects.equals(this.consumptionResetPeriodDays, provisioningLimitationDto.consumptionResetPeriodDays);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, value, remaining, consumptionResetMode, consumptionResetPeriodDays);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvisioningLimitationDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    remaining: ").append(toIndentedString(remaining)).append("\n");
    sb.append("    consumptionResetMode: ").append(toIndentedString(consumptionResetMode)).append("\n");
    sb.append("    consumptionResetPeriodDays: ").append(toIndentedString(consumptionResetPeriodDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("id", "name", "description", "value", "remaining", "consumption_reset_mode", "consumption_reset_period_days"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProvisioningLimitationDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProvisioningLimitationDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProvisioningLimitationDto is not found in the empty JSON string", ProvisioningLimitationDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProvisioningLimitationDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProvisioningLimitationDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `consumption_reset_mode`
      if (jsonObj.get("consumption_reset_mode") != null && !jsonObj.get("consumption_reset_mode").isJsonNull()) {
        ConsumptionResetPeriod.validateJsonElement(jsonObj.get("consumption_reset_mode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProvisioningLimitationDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProvisioningLimitationDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProvisioningLimitationDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProvisioningLimitationDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ProvisioningLimitationDto>() {
           @Override
           public void write(JsonWriter out, ProvisioningLimitationDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProvisioningLimitationDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProvisioningLimitationDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProvisioningLimitationDto
   * @throws IOException if the JSON string is invalid with respect to ProvisioningLimitationDto
   */
  public static ProvisioningLimitationDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProvisioningLimitationDto.class);
  }

  /**
   * Convert an instance of ProvisioningLimitationDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

