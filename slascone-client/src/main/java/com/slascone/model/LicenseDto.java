/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.CustomerDto;
import com.slascone.model.DateValidity;
import com.slascone.model.ExpirationMode;
import com.slascone.model.LicenseConstrainedVariableDto;
import com.slascone.model.LicenseFeatureDto;
import com.slascone.model.LicenseLimitationDto;
import com.slascone.model.LicenseTypeDto;
import com.slascone.model.LicenseUserDto;
import com.slascone.model.LicenseUserGroupDto;
import com.slascone.model.LicenseVariableDto;
import com.slascone.model.MailLogDto;
import com.slascone.model.ProductDto;
import com.slascone.model.SoftwareReleaseLimitationDto;
import com.slascone.model.TemplateDto;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * LicenseDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class LicenseDto {
  public static final String SERIALIZED_NAME_EXPIRATION_DATE_UTC = "expiration_date_utc";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime expirationDateUtc;

  public static final String SERIALIZED_NAME_EXPIRATION_MODE = "expiration_mode";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_MODE)
  @javax.annotation.Nullable
  private ExpirationMode expirationMode;

  public static final String SERIALIZED_NAME_VALID_DAYS_COUNT = "valid_days_count";
  @SerializedName(SERIALIZED_NAME_VALID_DAYS_COUNT)
  @javax.annotation.Nullable
  private Integer validDaysCount;

  public static final String SERIALIZED_NAME_TRIAL_DAYS_COUNT = "trial_days_count";
  @SerializedName(SERIALIZED_NAME_TRIAL_DAYS_COUNT)
  @javax.annotation.Nullable
  private Integer trialDaysCount;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  @javax.annotation.Nullable
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_EXPIRED = "is_expired";
  @SerializedName(SERIALIZED_NAME_IS_EXPIRED)
  @javax.annotation.Nullable
  private Boolean isExpired;

  public static final String SERIALIZED_NAME_DATE_VALIDITY = "date_validity";
  @SerializedName(SERIALIZED_NAME_DATE_VALIDITY)
  @javax.annotation.Nullable
  private DateValidity dateValidity;

  public static final String SERIALIZED_NAME_IS_VALID = "is_valid";
  @SerializedName(SERIALIZED_NAME_IS_VALID)
  @javax.annotation.Nullable
  private Boolean isValid;

  public static final String SERIALIZED_NAME_IS_SOFTWARE_RELEASE_VALID = "is_software_release_valid";
  @SerializedName(SERIALIZED_NAME_IS_SOFTWARE_RELEASE_VALID)
  @javax.annotation.Nullable
  private Boolean isSoftwareReleaseValid;

  public static final String SERIALIZED_NAME_IS_GROUP_VALID = "is_group_valid";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_VALID)
  @javax.annotation.Nullable
  private Boolean isGroupValid;

  public static final String SERIALIZED_NAME_GROUP_COUNT = "group_count";
  @SerializedName(SERIALIZED_NAME_GROUP_COUNT)
  @javax.annotation.Nullable
  private Integer groupCount;

  public static final String SERIALIZED_NAME_DATE_OF_ISSUE_UTC = "date_of_issue_utc";
  @SerializedName(SERIALIZED_NAME_DATE_OF_ISSUE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime dateOfIssueUtc;

  public static final String SERIALIZED_NAME_START_DATE_UTC = "start_date_utc";
  @SerializedName(SERIALIZED_NAME_START_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime startDateUtc;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private UUID id;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customer_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  @javax.annotation.Nonnull
  private UUID customerId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nonnull
  private UUID productId;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  @javax.annotation.Nonnull
  private UUID templateId;

  public static final String SERIALIZED_NAME_LICENSE_TYPE_ID = "license_type_id";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE_ID)
  @javax.annotation.Nullable
  private UUID licenseTypeId;

  public static final String SERIALIZED_NAME_LEGACY_LICENSE_KEY = "legacy_license_key";
  @SerializedName(SERIALIZED_NAME_LEGACY_LICENSE_KEY)
  @javax.annotation.Nullable
  private String legacyLicenseKey;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_TOKEN_LIMIT = "token_limit";
  @SerializedName(SERIALIZED_NAME_TOKEN_LIMIT)
  @javax.annotation.Nonnull
  private Integer tokenLimit;

  public static final String SERIALIZED_NAME_GOODWILL_TOKEN_LIMIT = "goodwill_token_limit";
  @SerializedName(SERIALIZED_NAME_GOODWILL_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer goodwillTokenLimit;

  public static final String SERIALIZED_NAME_FLOATING_TOKEN_LIMIT = "floating_token_limit";
  @SerializedName(SERIALIZED_NAME_FLOATING_TOKEN_LIMIT)
  @javax.annotation.Nullable
  private Integer floatingTokenLimit;

  public static final String SERIALIZED_NAME_USER_LIMIT = "user_limit";
  @SerializedName(SERIALIZED_NAME_USER_LIMIT)
  @javax.annotation.Nullable
  private Integer userLimit;

  public static final String SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION_ID = "software_release_limitation_id";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION_ID)
  @javax.annotation.Nullable
  private UUID softwareReleaseLimitationId;

  public static final String SERIALIZED_NAME_IS_TEMPORARY = "is_temporary";
  @SerializedName(SERIALIZED_NAME_IS_TEMPORARY)
  @javax.annotation.Nullable
  private Boolean isTemporary;

  public static final String SERIALIZED_NAME_LICENSE_FEATURES = "license_features";
  @SerializedName(SERIALIZED_NAME_LICENSE_FEATURES)
  @javax.annotation.Nullable
  private List<LicenseFeatureDto> licenseFeatures;

  public static final String SERIALIZED_NAME_LICENSE_LIMITATIONS = "license_limitations";
  @SerializedName(SERIALIZED_NAME_LICENSE_LIMITATIONS)
  @javax.annotation.Nullable
  private List<LicenseLimitationDto> licenseLimitations;

  public static final String SERIALIZED_NAME_LICENSE_CONSTRAINED_VARIABLES = "license_constrained_variables";
  @SerializedName(SERIALIZED_NAME_LICENSE_CONSTRAINED_VARIABLES)
  @javax.annotation.Nullable
  private List<LicenseConstrainedVariableDto> licenseConstrainedVariables;

  public static final String SERIALIZED_NAME_LICENSE_VARIABLES = "license_variables";
  @SerializedName(SERIALIZED_NAME_LICENSE_VARIABLES)
  @javax.annotation.Nullable
  private List<LicenseVariableDto> licenseVariables;

  public static final String SERIALIZED_NAME_LICENSE_USERS_GROUPS = "license_users_groups";
  @SerializedName(SERIALIZED_NAME_LICENSE_USERS_GROUPS)
  @javax.annotation.Nullable
  private List<LicenseUserGroupDto> licenseUsersGroups;

  public static final String SERIALIZED_NAME_LICENSE_USERS = "license_users";
  @SerializedName(SERIALIZED_NAME_LICENSE_USERS)
  @javax.annotation.Nullable
  private List<LicenseUserDto> licenseUsers;

  public static final String SERIALIZED_NAME_CREATED_DATE_UTC = "created_date_utc";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime createdDateUtc;

  public static final String SERIALIZED_NAME_MODIFIED_DATE_UTC = "modified_date_utc";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime modifiedDateUtc;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  @javax.annotation.Nullable
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  @javax.annotation.Nullable
  private CustomerDto customer;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  @javax.annotation.Nullable
  private ProductDto product;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  @javax.annotation.Nullable
  private TemplateDto template;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "license_type";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  @javax.annotation.Nullable
  private LicenseTypeDto licenseType;

  public static final String SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION = "software_release_limitation";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_RELEASE_LIMITATION)
  @javax.annotation.Nullable
  private SoftwareReleaseLimitationDto softwareReleaseLimitation;

  public static final String SERIALIZED_NAME_PRIORITIZED_SOFTWARE_RELEASE = "prioritized_software_release";
  @SerializedName(SERIALIZED_NAME_PRIORITIZED_SOFTWARE_RELEASE)
  @javax.annotation.Nullable
  private String prioritizedSoftwareRelease;

  public static final String SERIALIZED_NAME_MAIL_LOGS = "mail_logs";
  @SerializedName(SERIALIZED_NAME_MAIL_LOGS)
  @javax.annotation.Nullable
  private List<MailLogDto> mailLogs;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private String clientId;

  public LicenseDto() {
  }

  public LicenseDto expirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
    return this;
  }

  /**
   * Get expirationDateUtc
   * @return expirationDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDateUtc() {
    return expirationDateUtc;
  }

  public void setExpirationDateUtc(@javax.annotation.Nullable OffsetDateTime expirationDateUtc) {
    this.expirationDateUtc = expirationDateUtc;
  }


  public LicenseDto expirationMode(@javax.annotation.Nullable ExpirationMode expirationMode) {
    this.expirationMode = expirationMode;
    return this;
  }

  /**
   * Get expirationMode
   * @return expirationMode
   */
  @javax.annotation.Nullable
  public ExpirationMode getExpirationMode() {
    return expirationMode;
  }

  public void setExpirationMode(@javax.annotation.Nullable ExpirationMode expirationMode) {
    this.expirationMode = expirationMode;
  }


  public LicenseDto validDaysCount(@javax.annotation.Nullable Integer validDaysCount) {
    this.validDaysCount = validDaysCount;
    return this;
  }

  /**
   * Get validDaysCount
   * @return validDaysCount
   */
  @javax.annotation.Nullable
  public Integer getValidDaysCount() {
    return validDaysCount;
  }

  public void setValidDaysCount(@javax.annotation.Nullable Integer validDaysCount) {
    this.validDaysCount = validDaysCount;
  }


  public LicenseDto trialDaysCount(@javax.annotation.Nullable Integer trialDaysCount) {
    this.trialDaysCount = trialDaysCount;
    return this;
  }

  /**
   * Get trialDaysCount
   * @return trialDaysCount
   */
  @javax.annotation.Nullable
  public Integer getTrialDaysCount() {
    return trialDaysCount;
  }

  public void setTrialDaysCount(@javax.annotation.Nullable Integer trialDaysCount) {
    this.trialDaysCount = trialDaysCount;
  }


  public LicenseDto isActive(@javax.annotation.Nullable Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(@javax.annotation.Nullable Boolean isActive) {
    this.isActive = isActive;
  }


  public LicenseDto isExpired(@javax.annotation.Nullable Boolean isExpired) {
    this.isExpired = isExpired;
    return this;
  }

  /**
   * Get isExpired
   * @return isExpired
   */
  @javax.annotation.Nullable
  public Boolean getIsExpired() {
    return isExpired;
  }

  public void setIsExpired(@javax.annotation.Nullable Boolean isExpired) {
    this.isExpired = isExpired;
  }


  public LicenseDto dateValidity(@javax.annotation.Nullable DateValidity dateValidity) {
    this.dateValidity = dateValidity;
    return this;
  }

  /**
   * Get dateValidity
   * @return dateValidity
   */
  @javax.annotation.Nullable
  public DateValidity getDateValidity() {
    return dateValidity;
  }

  public void setDateValidity(@javax.annotation.Nullable DateValidity dateValidity) {
    this.dateValidity = dateValidity;
  }


  public LicenseDto isValid(@javax.annotation.Nullable Boolean isValid) {
    this.isValid = isValid;
    return this;
  }

  /**
   * Get isValid
   * @return isValid
   */
  @javax.annotation.Nullable
  public Boolean getIsValid() {
    return isValid;
  }

  public void setIsValid(@javax.annotation.Nullable Boolean isValid) {
    this.isValid = isValid;
  }


  public LicenseDto isSoftwareReleaseValid(@javax.annotation.Nullable Boolean isSoftwareReleaseValid) {
    this.isSoftwareReleaseValid = isSoftwareReleaseValid;
    return this;
  }

  /**
   * Get isSoftwareReleaseValid
   * @return isSoftwareReleaseValid
   */
  @javax.annotation.Nullable
  public Boolean getIsSoftwareReleaseValid() {
    return isSoftwareReleaseValid;
  }

  public void setIsSoftwareReleaseValid(@javax.annotation.Nullable Boolean isSoftwareReleaseValid) {
    this.isSoftwareReleaseValid = isSoftwareReleaseValid;
  }


  public LicenseDto isGroupValid(@javax.annotation.Nullable Boolean isGroupValid) {
    this.isGroupValid = isGroupValid;
    return this;
  }

  /**
   * Get isGroupValid
   * @return isGroupValid
   */
  @javax.annotation.Nullable
  public Boolean getIsGroupValid() {
    return isGroupValid;
  }

  public void setIsGroupValid(@javax.annotation.Nullable Boolean isGroupValid) {
    this.isGroupValid = isGroupValid;
  }


  public LicenseDto groupCount(@javax.annotation.Nullable Integer groupCount) {
    this.groupCount = groupCount;
    return this;
  }

  /**
   * Get groupCount
   * @return groupCount
   */
  @javax.annotation.Nullable
  public Integer getGroupCount() {
    return groupCount;
  }

  public void setGroupCount(@javax.annotation.Nullable Integer groupCount) {
    this.groupCount = groupCount;
  }


  public LicenseDto dateOfIssueUtc(@javax.annotation.Nullable OffsetDateTime dateOfIssueUtc) {
    this.dateOfIssueUtc = dateOfIssueUtc;
    return this;
  }

  /**
   * Get dateOfIssueUtc
   * @return dateOfIssueUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateOfIssueUtc() {
    return dateOfIssueUtc;
  }

  public void setDateOfIssueUtc(@javax.annotation.Nullable OffsetDateTime dateOfIssueUtc) {
    this.dateOfIssueUtc = dateOfIssueUtc;
  }


  public LicenseDto startDateUtc(@javax.annotation.Nullable OffsetDateTime startDateUtc) {
    this.startDateUtc = startDateUtc;
    return this;
  }

  /**
   * Get startDateUtc
   * @return startDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDateUtc() {
    return startDateUtc;
  }

  public void setStartDateUtc(@javax.annotation.Nullable OffsetDateTime startDateUtc) {
    this.startDateUtc = startDateUtc;
  }


  public LicenseDto id(@javax.annotation.Nonnull UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public UUID getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public LicenseDto customerId(@javax.annotation.Nonnull UUID customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * Get customerId
   * @return customerId
   */
  @javax.annotation.Nonnull
  public UUID getCustomerId() {
    return customerId;
  }

  public void setCustomerId(@javax.annotation.Nonnull UUID customerId) {
    this.customerId = customerId;
  }


  public LicenseDto productId(@javax.annotation.Nonnull UUID productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nonnull
  public UUID getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nonnull UUID productId) {
    this.productId = productId;
  }


  public LicenseDto templateId(@javax.annotation.Nonnull UUID templateId) {
    this.templateId = templateId;
    return this;
  }

  /**
   * Get templateId
   * @return templateId
   */
  @javax.annotation.Nonnull
  public UUID getTemplateId() {
    return templateId;
  }

  public void setTemplateId(@javax.annotation.Nonnull UUID templateId) {
    this.templateId = templateId;
  }


  public LicenseDto licenseTypeId(@javax.annotation.Nullable UUID licenseTypeId) {
    this.licenseTypeId = licenseTypeId;
    return this;
  }

  /**
   * Get licenseTypeId
   * @return licenseTypeId
   */
  @javax.annotation.Nullable
  public UUID getLicenseTypeId() {
    return licenseTypeId;
  }

  public void setLicenseTypeId(@javax.annotation.Nullable UUID licenseTypeId) {
    this.licenseTypeId = licenseTypeId;
  }


  public LicenseDto legacyLicenseKey(@javax.annotation.Nullable String legacyLicenseKey) {
    this.legacyLicenseKey = legacyLicenseKey;
    return this;
  }

  /**
   * Get legacyLicenseKey
   * @return legacyLicenseKey
   */
  @javax.annotation.Nullable
  public String getLegacyLicenseKey() {
    return legacyLicenseKey;
  }

  public void setLegacyLicenseKey(@javax.annotation.Nullable String legacyLicenseKey) {
    this.legacyLicenseKey = legacyLicenseKey;
  }


  public LicenseDto name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public LicenseDto description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public LicenseDto tokenLimit(@javax.annotation.Nonnull Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
    return this;
  }

  /**
   * Get tokenLimit
   * @return tokenLimit
   */
  @javax.annotation.Nonnull
  public Integer getTokenLimit() {
    return tokenLimit;
  }

  public void setTokenLimit(@javax.annotation.Nonnull Integer tokenLimit) {
    this.tokenLimit = tokenLimit;
  }


  public LicenseDto goodwillTokenLimit(@javax.annotation.Nullable Integer goodwillTokenLimit) {
    this.goodwillTokenLimit = goodwillTokenLimit;
    return this;
  }

  /**
   * Get goodwillTokenLimit
   * @return goodwillTokenLimit
   */
  @javax.annotation.Nullable
  public Integer getGoodwillTokenLimit() {
    return goodwillTokenLimit;
  }

  public void setGoodwillTokenLimit(@javax.annotation.Nullable Integer goodwillTokenLimit) {
    this.goodwillTokenLimit = goodwillTokenLimit;
  }


  public LicenseDto floatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
    return this;
  }

  /**
   * Get floatingTokenLimit
   * @return floatingTokenLimit
   */
  @javax.annotation.Nullable
  public Integer getFloatingTokenLimit() {
    return floatingTokenLimit;
  }

  public void setFloatingTokenLimit(@javax.annotation.Nullable Integer floatingTokenLimit) {
    this.floatingTokenLimit = floatingTokenLimit;
  }


  public LicenseDto userLimit(@javax.annotation.Nullable Integer userLimit) {
    this.userLimit = userLimit;
    return this;
  }

  /**
   * Get userLimit
   * @return userLimit
   */
  @javax.annotation.Nullable
  public Integer getUserLimit() {
    return userLimit;
  }

  public void setUserLimit(@javax.annotation.Nullable Integer userLimit) {
    this.userLimit = userLimit;
  }


  public LicenseDto softwareReleaseLimitationId(@javax.annotation.Nullable UUID softwareReleaseLimitationId) {
    this.softwareReleaseLimitationId = softwareReleaseLimitationId;
    return this;
  }

  /**
   * Get softwareReleaseLimitationId
   * @return softwareReleaseLimitationId
   */
  @javax.annotation.Nullable
  public UUID getSoftwareReleaseLimitationId() {
    return softwareReleaseLimitationId;
  }

  public void setSoftwareReleaseLimitationId(@javax.annotation.Nullable UUID softwareReleaseLimitationId) {
    this.softwareReleaseLimitationId = softwareReleaseLimitationId;
  }


  public LicenseDto isTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
    return this;
  }

  /**
   * Get isTemporary
   * @return isTemporary
   */
  @javax.annotation.Nullable
  public Boolean getIsTemporary() {
    return isTemporary;
  }

  public void setIsTemporary(@javax.annotation.Nullable Boolean isTemporary) {
    this.isTemporary = isTemporary;
  }


  public LicenseDto licenseFeatures(@javax.annotation.Nullable List<LicenseFeatureDto> licenseFeatures) {
    this.licenseFeatures = licenseFeatures;
    return this;
  }

  public LicenseDto addLicenseFeaturesItem(LicenseFeatureDto licenseFeaturesItem) {
    if (this.licenseFeatures == null) {
      this.licenseFeatures = new ArrayList<>();
    }
    this.licenseFeatures.add(licenseFeaturesItem);
    return this;
  }

  /**
   * Get licenseFeatures
   * @return licenseFeatures
   */
  @javax.annotation.Nullable
  public List<LicenseFeatureDto> getLicenseFeatures() {
    return licenseFeatures;
  }

  public void setLicenseFeatures(@javax.annotation.Nullable List<LicenseFeatureDto> licenseFeatures) {
    this.licenseFeatures = licenseFeatures;
  }


  public LicenseDto licenseLimitations(@javax.annotation.Nullable List<LicenseLimitationDto> licenseLimitations) {
    this.licenseLimitations = licenseLimitations;
    return this;
  }

  public LicenseDto addLicenseLimitationsItem(LicenseLimitationDto licenseLimitationsItem) {
    if (this.licenseLimitations == null) {
      this.licenseLimitations = new ArrayList<>();
    }
    this.licenseLimitations.add(licenseLimitationsItem);
    return this;
  }

  /**
   * Get licenseLimitations
   * @return licenseLimitations
   */
  @javax.annotation.Nullable
  public List<LicenseLimitationDto> getLicenseLimitations() {
    return licenseLimitations;
  }

  public void setLicenseLimitations(@javax.annotation.Nullable List<LicenseLimitationDto> licenseLimitations) {
    this.licenseLimitations = licenseLimitations;
  }


  public LicenseDto licenseConstrainedVariables(@javax.annotation.Nullable List<LicenseConstrainedVariableDto> licenseConstrainedVariables) {
    this.licenseConstrainedVariables = licenseConstrainedVariables;
    return this;
  }

  public LicenseDto addLicenseConstrainedVariablesItem(LicenseConstrainedVariableDto licenseConstrainedVariablesItem) {
    if (this.licenseConstrainedVariables == null) {
      this.licenseConstrainedVariables = new ArrayList<>();
    }
    this.licenseConstrainedVariables.add(licenseConstrainedVariablesItem);
    return this;
  }

  /**
   * Get licenseConstrainedVariables
   * @return licenseConstrainedVariables
   */
  @javax.annotation.Nullable
  public List<LicenseConstrainedVariableDto> getLicenseConstrainedVariables() {
    return licenseConstrainedVariables;
  }

  public void setLicenseConstrainedVariables(@javax.annotation.Nullable List<LicenseConstrainedVariableDto> licenseConstrainedVariables) {
    this.licenseConstrainedVariables = licenseConstrainedVariables;
  }


  public LicenseDto licenseVariables(@javax.annotation.Nullable List<LicenseVariableDto> licenseVariables) {
    this.licenseVariables = licenseVariables;
    return this;
  }

  public LicenseDto addLicenseVariablesItem(LicenseVariableDto licenseVariablesItem) {
    if (this.licenseVariables == null) {
      this.licenseVariables = new ArrayList<>();
    }
    this.licenseVariables.add(licenseVariablesItem);
    return this;
  }

  /**
   * Get licenseVariables
   * @return licenseVariables
   */
  @javax.annotation.Nullable
  public List<LicenseVariableDto> getLicenseVariables() {
    return licenseVariables;
  }

  public void setLicenseVariables(@javax.annotation.Nullable List<LicenseVariableDto> licenseVariables) {
    this.licenseVariables = licenseVariables;
  }


  public LicenseDto licenseUsersGroups(@javax.annotation.Nullable List<LicenseUserGroupDto> licenseUsersGroups) {
    this.licenseUsersGroups = licenseUsersGroups;
    return this;
  }

  public LicenseDto addLicenseUsersGroupsItem(LicenseUserGroupDto licenseUsersGroupsItem) {
    if (this.licenseUsersGroups == null) {
      this.licenseUsersGroups = new ArrayList<>();
    }
    this.licenseUsersGroups.add(licenseUsersGroupsItem);
    return this;
  }

  /**
   * Get licenseUsersGroups
   * @return licenseUsersGroups
   */
  @javax.annotation.Nullable
  public List<LicenseUserGroupDto> getLicenseUsersGroups() {
    return licenseUsersGroups;
  }

  public void setLicenseUsersGroups(@javax.annotation.Nullable List<LicenseUserGroupDto> licenseUsersGroups) {
    this.licenseUsersGroups = licenseUsersGroups;
  }


  public LicenseDto licenseUsers(@javax.annotation.Nullable List<LicenseUserDto> licenseUsers) {
    this.licenseUsers = licenseUsers;
    return this;
  }

  public LicenseDto addLicenseUsersItem(LicenseUserDto licenseUsersItem) {
    if (this.licenseUsers == null) {
      this.licenseUsers = new ArrayList<>();
    }
    this.licenseUsers.add(licenseUsersItem);
    return this;
  }

  /**
   * Get licenseUsers
   * @return licenseUsers
   */
  @javax.annotation.Nullable
  public List<LicenseUserDto> getLicenseUsers() {
    return licenseUsers;
  }

  public void setLicenseUsers(@javax.annotation.Nullable List<LicenseUserDto> licenseUsers) {
    this.licenseUsers = licenseUsers;
  }


  public LicenseDto createdDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
    return this;
  }

  /**
   * Get createdDateUtc
   * @return createdDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDateUtc() {
    return createdDateUtc;
  }

  public void setCreatedDateUtc(@javax.annotation.Nullable OffsetDateTime createdDateUtc) {
    this.createdDateUtc = createdDateUtc;
  }


  public LicenseDto modifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
    return this;
  }

  /**
   * Get modifiedDateUtc
   * @return modifiedDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModifiedDateUtc() {
    return modifiedDateUtc;
  }

  public void setModifiedDateUtc(@javax.annotation.Nullable OffsetDateTime modifiedDateUtc) {
    this.modifiedDateUtc = modifiedDateUtc;
  }


  public LicenseDto lastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(@javax.annotation.Nullable String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public LicenseDto customer(@javax.annotation.Nullable CustomerDto customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public CustomerDto getCustomer() {
    return customer;
  }

  public void setCustomer(@javax.annotation.Nullable CustomerDto customer) {
    this.customer = customer;
  }


  public LicenseDto product(@javax.annotation.Nullable ProductDto product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public ProductDto getProduct() {
    return product;
  }

  public void setProduct(@javax.annotation.Nullable ProductDto product) {
    this.product = product;
  }


  public LicenseDto template(@javax.annotation.Nullable TemplateDto template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public TemplateDto getTemplate() {
    return template;
  }

  public void setTemplate(@javax.annotation.Nullable TemplateDto template) {
    this.template = template;
  }


  public LicenseDto licenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Get licenseType
   * @return licenseType
   */
  @javax.annotation.Nullable
  public LicenseTypeDto getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(@javax.annotation.Nullable LicenseTypeDto licenseType) {
    this.licenseType = licenseType;
  }


  public LicenseDto softwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
    return this;
  }

  /**
   * Get softwareReleaseLimitation
   * @return softwareReleaseLimitation
   */
  @javax.annotation.Nullable
  public SoftwareReleaseLimitationDto getSoftwareReleaseLimitation() {
    return softwareReleaseLimitation;
  }

  public void setSoftwareReleaseLimitation(@javax.annotation.Nullable SoftwareReleaseLimitationDto softwareReleaseLimitation) {
    this.softwareReleaseLimitation = softwareReleaseLimitation;
  }


  public LicenseDto prioritizedSoftwareRelease(@javax.annotation.Nullable String prioritizedSoftwareRelease) {
    this.prioritizedSoftwareRelease = prioritizedSoftwareRelease;
    return this;
  }

  /**
   * Get prioritizedSoftwareRelease
   * @return prioritizedSoftwareRelease
   */
  @javax.annotation.Nullable
  public String getPrioritizedSoftwareRelease() {
    return prioritizedSoftwareRelease;
  }

  public void setPrioritizedSoftwareRelease(@javax.annotation.Nullable String prioritizedSoftwareRelease) {
    this.prioritizedSoftwareRelease = prioritizedSoftwareRelease;
  }


  public LicenseDto mailLogs(@javax.annotation.Nullable List<MailLogDto> mailLogs) {
    this.mailLogs = mailLogs;
    return this;
  }

  public LicenseDto addMailLogsItem(MailLogDto mailLogsItem) {
    if (this.mailLogs == null) {
      this.mailLogs = new ArrayList<>();
    }
    this.mailLogs.add(mailLogsItem);
    return this;
  }

  /**
   * Get mailLogs
   * @return mailLogs
   */
  @javax.annotation.Nullable
  public List<MailLogDto> getMailLogs() {
    return mailLogs;
  }

  public void setMailLogs(@javax.annotation.Nullable List<MailLogDto> mailLogs) {
    this.mailLogs = mailLogs;
  }


  public LicenseDto clientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseDto licenseDto = (LicenseDto) o;
    return Objects.equals(this.expirationDateUtc, licenseDto.expirationDateUtc) &&
        Objects.equals(this.expirationMode, licenseDto.expirationMode) &&
        Objects.equals(this.validDaysCount, licenseDto.validDaysCount) &&
        Objects.equals(this.trialDaysCount, licenseDto.trialDaysCount) &&
        Objects.equals(this.isActive, licenseDto.isActive) &&
        Objects.equals(this.isExpired, licenseDto.isExpired) &&
        Objects.equals(this.dateValidity, licenseDto.dateValidity) &&
        Objects.equals(this.isValid, licenseDto.isValid) &&
        Objects.equals(this.isSoftwareReleaseValid, licenseDto.isSoftwareReleaseValid) &&
        Objects.equals(this.isGroupValid, licenseDto.isGroupValid) &&
        Objects.equals(this.groupCount, licenseDto.groupCount) &&
        Objects.equals(this.dateOfIssueUtc, licenseDto.dateOfIssueUtc) &&
        Objects.equals(this.startDateUtc, licenseDto.startDateUtc) &&
        Objects.equals(this.id, licenseDto.id) &&
        Objects.equals(this.customerId, licenseDto.customerId) &&
        Objects.equals(this.productId, licenseDto.productId) &&
        Objects.equals(this.templateId, licenseDto.templateId) &&
        Objects.equals(this.licenseTypeId, licenseDto.licenseTypeId) &&
        Objects.equals(this.legacyLicenseKey, licenseDto.legacyLicenseKey) &&
        Objects.equals(this.name, licenseDto.name) &&
        Objects.equals(this.description, licenseDto.description) &&
        Objects.equals(this.tokenLimit, licenseDto.tokenLimit) &&
        Objects.equals(this.goodwillTokenLimit, licenseDto.goodwillTokenLimit) &&
        Objects.equals(this.floatingTokenLimit, licenseDto.floatingTokenLimit) &&
        Objects.equals(this.userLimit, licenseDto.userLimit) &&
        Objects.equals(this.softwareReleaseLimitationId, licenseDto.softwareReleaseLimitationId) &&
        Objects.equals(this.isTemporary, licenseDto.isTemporary) &&
        Objects.equals(this.licenseFeatures, licenseDto.licenseFeatures) &&
        Objects.equals(this.licenseLimitations, licenseDto.licenseLimitations) &&
        Objects.equals(this.licenseConstrainedVariables, licenseDto.licenseConstrainedVariables) &&
        Objects.equals(this.licenseVariables, licenseDto.licenseVariables) &&
        Objects.equals(this.licenseUsersGroups, licenseDto.licenseUsersGroups) &&
        Objects.equals(this.licenseUsers, licenseDto.licenseUsers) &&
        Objects.equals(this.createdDateUtc, licenseDto.createdDateUtc) &&
        Objects.equals(this.modifiedDateUtc, licenseDto.modifiedDateUtc) &&
        Objects.equals(this.lastModifiedBy, licenseDto.lastModifiedBy) &&
        Objects.equals(this.customer, licenseDto.customer) &&
        Objects.equals(this.product, licenseDto.product) &&
        Objects.equals(this.template, licenseDto.template) &&
        Objects.equals(this.licenseType, licenseDto.licenseType) &&
        Objects.equals(this.softwareReleaseLimitation, licenseDto.softwareReleaseLimitation) &&
        Objects.equals(this.prioritizedSoftwareRelease, licenseDto.prioritizedSoftwareRelease) &&
        Objects.equals(this.mailLogs, licenseDto.mailLogs) &&
        Objects.equals(this.clientId, licenseDto.clientId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(expirationDateUtc, expirationMode, validDaysCount, trialDaysCount, isActive, isExpired, dateValidity, isValid, isSoftwareReleaseValid, isGroupValid, groupCount, dateOfIssueUtc, startDateUtc, id, customerId, productId, templateId, licenseTypeId, legacyLicenseKey, name, description, tokenLimit, goodwillTokenLimit, floatingTokenLimit, userLimit, softwareReleaseLimitationId, isTemporary, licenseFeatures, licenseLimitations, licenseConstrainedVariables, licenseVariables, licenseUsersGroups, licenseUsers, createdDateUtc, modifiedDateUtc, lastModifiedBy, customer, product, template, licenseType, softwareReleaseLimitation, prioritizedSoftwareRelease, mailLogs, clientId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseDto {\n");
    sb.append("    expirationDateUtc: ").append(toIndentedString(expirationDateUtc)).append("\n");
    sb.append("    expirationMode: ").append(toIndentedString(expirationMode)).append("\n");
    sb.append("    validDaysCount: ").append(toIndentedString(validDaysCount)).append("\n");
    sb.append("    trialDaysCount: ").append(toIndentedString(trialDaysCount)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isExpired: ").append(toIndentedString(isExpired)).append("\n");
    sb.append("    dateValidity: ").append(toIndentedString(dateValidity)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    isSoftwareReleaseValid: ").append(toIndentedString(isSoftwareReleaseValid)).append("\n");
    sb.append("    isGroupValid: ").append(toIndentedString(isGroupValid)).append("\n");
    sb.append("    groupCount: ").append(toIndentedString(groupCount)).append("\n");
    sb.append("    dateOfIssueUtc: ").append(toIndentedString(dateOfIssueUtc)).append("\n");
    sb.append("    startDateUtc: ").append(toIndentedString(startDateUtc)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    licenseTypeId: ").append(toIndentedString(licenseTypeId)).append("\n");
    sb.append("    legacyLicenseKey: ").append(toIndentedString(legacyLicenseKey)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tokenLimit: ").append(toIndentedString(tokenLimit)).append("\n");
    sb.append("    goodwillTokenLimit: ").append(toIndentedString(goodwillTokenLimit)).append("\n");
    sb.append("    floatingTokenLimit: ").append(toIndentedString(floatingTokenLimit)).append("\n");
    sb.append("    userLimit: ").append(toIndentedString(userLimit)).append("\n");
    sb.append("    softwareReleaseLimitationId: ").append(toIndentedString(softwareReleaseLimitationId)).append("\n");
    sb.append("    isTemporary: ").append(toIndentedString(isTemporary)).append("\n");
    sb.append("    licenseFeatures: ").append(toIndentedString(licenseFeatures)).append("\n");
    sb.append("    licenseLimitations: ").append(toIndentedString(licenseLimitations)).append("\n");
    sb.append("    licenseConstrainedVariables: ").append(toIndentedString(licenseConstrainedVariables)).append("\n");
    sb.append("    licenseVariables: ").append(toIndentedString(licenseVariables)).append("\n");
    sb.append("    licenseUsersGroups: ").append(toIndentedString(licenseUsersGroups)).append("\n");
    sb.append("    licenseUsers: ").append(toIndentedString(licenseUsers)).append("\n");
    sb.append("    createdDateUtc: ").append(toIndentedString(createdDateUtc)).append("\n");
    sb.append("    modifiedDateUtc: ").append(toIndentedString(modifiedDateUtc)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    softwareReleaseLimitation: ").append(toIndentedString(softwareReleaseLimitation)).append("\n");
    sb.append("    prioritizedSoftwareRelease: ").append(toIndentedString(prioritizedSoftwareRelease)).append("\n");
    sb.append("    mailLogs: ").append(toIndentedString(mailLogs)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("expiration_date_utc", "expiration_mode", "valid_days_count", "trial_days_count", "is_active", "is_expired", "date_validity", "is_valid", "is_software_release_valid", "is_group_valid", "group_count", "date_of_issue_utc", "start_date_utc", "id", "customer_id", "product_id", "template_id", "license_type_id", "legacy_license_key", "name", "description", "token_limit", "goodwill_token_limit", "floating_token_limit", "user_limit", "software_release_limitation_id", "is_temporary", "license_features", "license_limitations", "license_constrained_variables", "license_variables", "license_users_groups", "license_users", "created_date_utc", "modified_date_utc", "last_modified_by", "customer", "product", "template", "license_type", "software_release_limitation", "prioritized_software_release", "mail_logs", "client_id"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("id", "customer_id", "product_id", "template_id", "token_limit"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LicenseDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LicenseDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LicenseDto is not found in the empty JSON string", LicenseDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LicenseDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LicenseDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LicenseDto.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `expiration_mode`
      if (jsonObj.get("expiration_mode") != null && !jsonObj.get("expiration_mode").isJsonNull()) {
        ExpirationMode.validateJsonElement(jsonObj.get("expiration_mode"));
      }
      // validate the optional field `date_validity`
      if (jsonObj.get("date_validity") != null && !jsonObj.get("date_validity").isJsonNull()) {
        DateValidity.validateJsonElement(jsonObj.get("date_validity"));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("customer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_id").toString()));
      }
      if (!jsonObj.get("product_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_id").toString()));
      }
      if (!jsonObj.get("template_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_id").toString()));
      }
      if ((jsonObj.get("license_type_id") != null && !jsonObj.get("license_type_id").isJsonNull()) && !jsonObj.get("license_type_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_type_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_type_id").toString()));
      }
      if ((jsonObj.get("legacy_license_key") != null && !jsonObj.get("legacy_license_key").isJsonNull()) && !jsonObj.get("legacy_license_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacy_license_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacy_license_key").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("software_release_limitation_id") != null && !jsonObj.get("software_release_limitation_id").isJsonNull()) && !jsonObj.get("software_release_limitation_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `software_release_limitation_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("software_release_limitation_id").toString()));
      }
      if (jsonObj.get("license_features") != null && !jsonObj.get("license_features").isJsonNull()) {
        JsonArray jsonArraylicenseFeatures = jsonObj.getAsJsonArray("license_features");
        if (jsonArraylicenseFeatures != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_features").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_features` to be an array in the JSON string but got `%s`", jsonObj.get("license_features").toString()));
          }

          // validate the optional field `license_features` (array)
          for (int i = 0; i < jsonArraylicenseFeatures.size(); i++) {
            LicenseFeatureDto.validateJsonElement(jsonArraylicenseFeatures.get(i));
          };
        }
      }
      if (jsonObj.get("license_limitations") != null && !jsonObj.get("license_limitations").isJsonNull()) {
        JsonArray jsonArraylicenseLimitations = jsonObj.getAsJsonArray("license_limitations");
        if (jsonArraylicenseLimitations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_limitations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_limitations` to be an array in the JSON string but got `%s`", jsonObj.get("license_limitations").toString()));
          }

          // validate the optional field `license_limitations` (array)
          for (int i = 0; i < jsonArraylicenseLimitations.size(); i++) {
            LicenseLimitationDto.validateJsonElement(jsonArraylicenseLimitations.get(i));
          };
        }
      }
      if (jsonObj.get("license_constrained_variables") != null && !jsonObj.get("license_constrained_variables").isJsonNull()) {
        JsonArray jsonArraylicenseConstrainedVariables = jsonObj.getAsJsonArray("license_constrained_variables");
        if (jsonArraylicenseConstrainedVariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_constrained_variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_constrained_variables` to be an array in the JSON string but got `%s`", jsonObj.get("license_constrained_variables").toString()));
          }

          // validate the optional field `license_constrained_variables` (array)
          for (int i = 0; i < jsonArraylicenseConstrainedVariables.size(); i++) {
            LicenseConstrainedVariableDto.validateJsonElement(jsonArraylicenseConstrainedVariables.get(i));
          };
        }
      }
      if (jsonObj.get("license_variables") != null && !jsonObj.get("license_variables").isJsonNull()) {
        JsonArray jsonArraylicenseVariables = jsonObj.getAsJsonArray("license_variables");
        if (jsonArraylicenseVariables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_variables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_variables` to be an array in the JSON string but got `%s`", jsonObj.get("license_variables").toString()));
          }

          // validate the optional field `license_variables` (array)
          for (int i = 0; i < jsonArraylicenseVariables.size(); i++) {
            LicenseVariableDto.validateJsonElement(jsonArraylicenseVariables.get(i));
          };
        }
      }
      if (jsonObj.get("license_users_groups") != null && !jsonObj.get("license_users_groups").isJsonNull()) {
        JsonArray jsonArraylicenseUsersGroups = jsonObj.getAsJsonArray("license_users_groups");
        if (jsonArraylicenseUsersGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_users_groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_users_groups` to be an array in the JSON string but got `%s`", jsonObj.get("license_users_groups").toString()));
          }

          // validate the optional field `license_users_groups` (array)
          for (int i = 0; i < jsonArraylicenseUsersGroups.size(); i++) {
            LicenseUserGroupDto.validateJsonElement(jsonArraylicenseUsersGroups.get(i));
          };
        }
      }
      if (jsonObj.get("license_users") != null && !jsonObj.get("license_users").isJsonNull()) {
        JsonArray jsonArraylicenseUsers = jsonObj.getAsJsonArray("license_users");
        if (jsonArraylicenseUsers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("license_users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `license_users` to be an array in the JSON string but got `%s`", jsonObj.get("license_users").toString()));
          }

          // validate the optional field `license_users` (array)
          for (int i = 0; i < jsonArraylicenseUsers.size(); i++) {
            LicenseUserDto.validateJsonElement(jsonArraylicenseUsers.get(i));
          };
        }
      }
      if ((jsonObj.get("last_modified_by") != null && !jsonObj.get("last_modified_by").isJsonNull()) && !jsonObj.get("last_modified_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_by").toString()));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        CustomerDto.validateJsonElement(jsonObj.get("customer"));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        ProductDto.validateJsonElement(jsonObj.get("product"));
      }
      // validate the optional field `template`
      if (jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) {
        TemplateDto.validateJsonElement(jsonObj.get("template"));
      }
      // validate the optional field `license_type`
      if (jsonObj.get("license_type") != null && !jsonObj.get("license_type").isJsonNull()) {
        LicenseTypeDto.validateJsonElement(jsonObj.get("license_type"));
      }
      // validate the optional field `software_release_limitation`
      if (jsonObj.get("software_release_limitation") != null && !jsonObj.get("software_release_limitation").isJsonNull()) {
        SoftwareReleaseLimitationDto.validateJsonElement(jsonObj.get("software_release_limitation"));
      }
      if ((jsonObj.get("prioritized_software_release") != null && !jsonObj.get("prioritized_software_release").isJsonNull()) && !jsonObj.get("prioritized_software_release").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prioritized_software_release` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prioritized_software_release").toString()));
      }
      if (jsonObj.get("mail_logs") != null && !jsonObj.get("mail_logs").isJsonNull()) {
        JsonArray jsonArraymailLogs = jsonObj.getAsJsonArray("mail_logs");
        if (jsonArraymailLogs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mail_logs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mail_logs` to be an array in the JSON string but got `%s`", jsonObj.get("mail_logs").toString()));
          }

          // validate the optional field `mail_logs` (array)
          for (int i = 0; i < jsonArraymailLogs.size(); i++) {
            MailLogDto.validateJsonElement(jsonArraymailLogs.get(i));
          };
        }
      }
      if ((jsonObj.get("client_id") != null && !jsonObj.get("client_id").isJsonNull()) && !jsonObj.get("client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LicenseDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LicenseDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LicenseDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LicenseDto.class));

       return (TypeAdapter<T>) new TypeAdapter<LicenseDto>() {
           @Override
           public void write(JsonWriter out, LicenseDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LicenseDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LicenseDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LicenseDto
   * @throws IOException if the JSON string is invalid with respect to LicenseDto
   */
  public static LicenseDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LicenseDto.class);
  }

  /**
   * Convert an instance of LicenseDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

