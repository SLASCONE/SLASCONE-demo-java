/*
 * SLASCONE API
 * Please visit our official [Documentation](https://support.slascone.com/hc/en-us/sections/360004685737-API) and/or our [GitHub repository](https://github.com/slascone/) and/or our [NuGet package](https://www.nuget.org/packages/Slascone.Client/). Always use Version 2 of this API (Version 1.3 is deprecated).
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.slascone.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.slascone.model.ConsumptionBalanceMode;
import com.slascone.model.ConsumptionResetPeriod;
import com.slascone.model.LimitationDto;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.slascone.JSON;

/**
 * ConsumptionBalanceDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class ConsumptionBalanceDto {
  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  @javax.annotation.Nullable
  private BigDecimal limit;

  public static final String SERIALIZED_NAME_REMAINING = "remaining";
  @SerializedName(SERIALIZED_NAME_REMAINING)
  @javax.annotation.Nullable
  private BigDecimal remaining;

  public static final String SERIALIZED_NAME_LAST_RESET_DATE_UTC = "last_reset_date_utc";
  @SerializedName(SERIALIZED_NAME_LAST_RESET_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime lastResetDateUtc;

  public static final String SERIALIZED_NAME_ASSIGNMENT_ID = "assignment_id";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_ID)
  @javax.annotation.Nullable
  private UUID assignmentId;

  public static final String SERIALIZED_NAME_LICENSE_ID = "license_id";
  @SerializedName(SERIALIZED_NAME_LICENSE_ID)
  @javax.annotation.Nullable
  private UUID licenseId;

  public static final String SERIALIZED_NAME_LIMITATION_ID = "limitation_id";
  @SerializedName(SERIALIZED_NAME_LIMITATION_ID)
  @javax.annotation.Nullable
  private UUID limitationId;

  public static final String SERIALIZED_NAME_LIMITATION = "limitation";
  @SerializedName(SERIALIZED_NAME_LIMITATION)
  @javax.annotation.Nullable
  private LimitationDto limitation;

  public static final String SERIALIZED_NAME_RESET_MODE = "reset_mode";
  @SerializedName(SERIALIZED_NAME_RESET_MODE)
  @javax.annotation.Nullable
  private ConsumptionResetPeriod resetMode;

  public static final String SERIALIZED_NAME_RESET_PERIOD_DAYS = "reset_period_days";
  @SerializedName(SERIALIZED_NAME_RESET_PERIOD_DAYS)
  @javax.annotation.Nullable
  private Integer resetPeriodDays;

  public static final String SERIALIZED_NAME_CONSUMPTION_BALANCE_MODE = "consumption_balance_mode";
  @SerializedName(SERIALIZED_NAME_CONSUMPTION_BALANCE_MODE)
  @javax.annotation.Nullable
  private ConsumptionBalanceMode consumptionBalanceMode;

  public static final String SERIALIZED_NAME_NEXT_RESET_DATE_UTC = "next_reset_date_utc";
  @SerializedName(SERIALIZED_NAME_NEXT_RESET_DATE_UTC)
  @javax.annotation.Nullable
  private OffsetDateTime nextResetDateUtc;

  public ConsumptionBalanceDto() {
  }

  public ConsumptionBalanceDto limit(@javax.annotation.Nullable BigDecimal limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * @return limit
   */
  @javax.annotation.Nullable
  public BigDecimal getLimit() {
    return limit;
  }

  public void setLimit(@javax.annotation.Nullable BigDecimal limit) {
    this.limit = limit;
  }


  public ConsumptionBalanceDto remaining(@javax.annotation.Nullable BigDecimal remaining) {
    this.remaining = remaining;
    return this;
  }

  /**
   * Get remaining
   * @return remaining
   */
  @javax.annotation.Nullable
  public BigDecimal getRemaining() {
    return remaining;
  }

  public void setRemaining(@javax.annotation.Nullable BigDecimal remaining) {
    this.remaining = remaining;
  }


  public ConsumptionBalanceDto lastResetDateUtc(@javax.annotation.Nullable OffsetDateTime lastResetDateUtc) {
    this.lastResetDateUtc = lastResetDateUtc;
    return this;
  }

  /**
   * Get lastResetDateUtc
   * @return lastResetDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastResetDateUtc() {
    return lastResetDateUtc;
  }

  public void setLastResetDateUtc(@javax.annotation.Nullable OffsetDateTime lastResetDateUtc) {
    this.lastResetDateUtc = lastResetDateUtc;
  }


  public ConsumptionBalanceDto assignmentId(@javax.annotation.Nullable UUID assignmentId) {
    this.assignmentId = assignmentId;
    return this;
  }

  /**
   * Get assignmentId
   * @return assignmentId
   */
  @javax.annotation.Nullable
  public UUID getAssignmentId() {
    return assignmentId;
  }

  public void setAssignmentId(@javax.annotation.Nullable UUID assignmentId) {
    this.assignmentId = assignmentId;
  }


  public ConsumptionBalanceDto licenseId(@javax.annotation.Nullable UUID licenseId) {
    this.licenseId = licenseId;
    return this;
  }

  /**
   * Get licenseId
   * @return licenseId
   */
  @javax.annotation.Nullable
  public UUID getLicenseId() {
    return licenseId;
  }

  public void setLicenseId(@javax.annotation.Nullable UUID licenseId) {
    this.licenseId = licenseId;
  }


  public ConsumptionBalanceDto limitationId(@javax.annotation.Nullable UUID limitationId) {
    this.limitationId = limitationId;
    return this;
  }

  /**
   * Get limitationId
   * @return limitationId
   */
  @javax.annotation.Nullable
  public UUID getLimitationId() {
    return limitationId;
  }

  public void setLimitationId(@javax.annotation.Nullable UUID limitationId) {
    this.limitationId = limitationId;
  }


  public ConsumptionBalanceDto limitation(@javax.annotation.Nullable LimitationDto limitation) {
    this.limitation = limitation;
    return this;
  }

  /**
   * Get limitation
   * @return limitation
   */
  @javax.annotation.Nullable
  public LimitationDto getLimitation() {
    return limitation;
  }

  public void setLimitation(@javax.annotation.Nullable LimitationDto limitation) {
    this.limitation = limitation;
  }


  public ConsumptionBalanceDto resetMode(@javax.annotation.Nullable ConsumptionResetPeriod resetMode) {
    this.resetMode = resetMode;
    return this;
  }

  /**
   * Get resetMode
   * @return resetMode
   */
  @javax.annotation.Nullable
  public ConsumptionResetPeriod getResetMode() {
    return resetMode;
  }

  public void setResetMode(@javax.annotation.Nullable ConsumptionResetPeriod resetMode) {
    this.resetMode = resetMode;
  }


  public ConsumptionBalanceDto resetPeriodDays(@javax.annotation.Nullable Integer resetPeriodDays) {
    this.resetPeriodDays = resetPeriodDays;
    return this;
  }

  /**
   * Get resetPeriodDays
   * @return resetPeriodDays
   */
  @javax.annotation.Nullable
  public Integer getResetPeriodDays() {
    return resetPeriodDays;
  }

  public void setResetPeriodDays(@javax.annotation.Nullable Integer resetPeriodDays) {
    this.resetPeriodDays = resetPeriodDays;
  }


  public ConsumptionBalanceDto consumptionBalanceMode(@javax.annotation.Nullable ConsumptionBalanceMode consumptionBalanceMode) {
    this.consumptionBalanceMode = consumptionBalanceMode;
    return this;
  }

  /**
   * Get consumptionBalanceMode
   * @return consumptionBalanceMode
   */
  @javax.annotation.Nullable
  public ConsumptionBalanceMode getConsumptionBalanceMode() {
    return consumptionBalanceMode;
  }

  public void setConsumptionBalanceMode(@javax.annotation.Nullable ConsumptionBalanceMode consumptionBalanceMode) {
    this.consumptionBalanceMode = consumptionBalanceMode;
  }


  public ConsumptionBalanceDto nextResetDateUtc(@javax.annotation.Nullable OffsetDateTime nextResetDateUtc) {
    this.nextResetDateUtc = nextResetDateUtc;
    return this;
  }

  /**
   * Get nextResetDateUtc
   * @return nextResetDateUtc
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNextResetDateUtc() {
    return nextResetDateUtc;
  }

  public void setNextResetDateUtc(@javax.annotation.Nullable OffsetDateTime nextResetDateUtc) {
    this.nextResetDateUtc = nextResetDateUtc;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumptionBalanceDto consumptionBalanceDto = (ConsumptionBalanceDto) o;
    return Objects.equals(this.limit, consumptionBalanceDto.limit) &&
        Objects.equals(this.remaining, consumptionBalanceDto.remaining) &&
        Objects.equals(this.lastResetDateUtc, consumptionBalanceDto.lastResetDateUtc) &&
        Objects.equals(this.assignmentId, consumptionBalanceDto.assignmentId) &&
        Objects.equals(this.licenseId, consumptionBalanceDto.licenseId) &&
        Objects.equals(this.limitationId, consumptionBalanceDto.limitationId) &&
        Objects.equals(this.limitation, consumptionBalanceDto.limitation) &&
        Objects.equals(this.resetMode, consumptionBalanceDto.resetMode) &&
        Objects.equals(this.resetPeriodDays, consumptionBalanceDto.resetPeriodDays) &&
        Objects.equals(this.consumptionBalanceMode, consumptionBalanceDto.consumptionBalanceMode) &&
        Objects.equals(this.nextResetDateUtc, consumptionBalanceDto.nextResetDateUtc);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, remaining, lastResetDateUtc, assignmentId, licenseId, limitationId, limitation, resetMode, resetPeriodDays, consumptionBalanceMode, nextResetDateUtc);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumptionBalanceDto {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    remaining: ").append(toIndentedString(remaining)).append("\n");
    sb.append("    lastResetDateUtc: ").append(toIndentedString(lastResetDateUtc)).append("\n");
    sb.append("    assignmentId: ").append(toIndentedString(assignmentId)).append("\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    limitationId: ").append(toIndentedString(limitationId)).append("\n");
    sb.append("    limitation: ").append(toIndentedString(limitation)).append("\n");
    sb.append("    resetMode: ").append(toIndentedString(resetMode)).append("\n");
    sb.append("    resetPeriodDays: ").append(toIndentedString(resetPeriodDays)).append("\n");
    sb.append("    consumptionBalanceMode: ").append(toIndentedString(consumptionBalanceMode)).append("\n");
    sb.append("    nextResetDateUtc: ").append(toIndentedString(nextResetDateUtc)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("limit", "remaining", "last_reset_date_utc", "assignment_id", "license_id", "limitation_id", "limitation", "reset_mode", "reset_period_days", "consumption_balance_mode", "next_reset_date_utc"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConsumptionBalanceDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConsumptionBalanceDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConsumptionBalanceDto is not found in the empty JSON string", ConsumptionBalanceDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConsumptionBalanceDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConsumptionBalanceDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assignment_id") != null && !jsonObj.get("assignment_id").isJsonNull()) && !jsonObj.get("assignment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assignment_id").toString()));
      }
      if ((jsonObj.get("license_id") != null && !jsonObj.get("license_id").isJsonNull()) && !jsonObj.get("license_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_id").toString()));
      }
      if ((jsonObj.get("limitation_id") != null && !jsonObj.get("limitation_id").isJsonNull()) && !jsonObj.get("limitation_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limitation_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limitation_id").toString()));
      }
      // validate the optional field `limitation`
      if (jsonObj.get("limitation") != null && !jsonObj.get("limitation").isJsonNull()) {
        LimitationDto.validateJsonElement(jsonObj.get("limitation"));
      }
      // validate the optional field `reset_mode`
      if (jsonObj.get("reset_mode") != null && !jsonObj.get("reset_mode").isJsonNull()) {
        ConsumptionResetPeriod.validateJsonElement(jsonObj.get("reset_mode"));
      }
      // validate the optional field `consumption_balance_mode`
      if (jsonObj.get("consumption_balance_mode") != null && !jsonObj.get("consumption_balance_mode").isJsonNull()) {
        ConsumptionBalanceMode.validateJsonElement(jsonObj.get("consumption_balance_mode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConsumptionBalanceDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConsumptionBalanceDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConsumptionBalanceDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConsumptionBalanceDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ConsumptionBalanceDto>() {
           @Override
           public void write(JsonWriter out, ConsumptionBalanceDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConsumptionBalanceDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConsumptionBalanceDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConsumptionBalanceDto
   * @throws IOException if the JSON string is invalid with respect to ConsumptionBalanceDto
   */
  public static ConsumptionBalanceDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConsumptionBalanceDto.class);
  }

  /**
   * Convert an instance of ConsumptionBalanceDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

